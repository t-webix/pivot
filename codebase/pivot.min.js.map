{"version":3,"file":"pivot.min.js","sources":["../node_modules/webix-jet/dist/es6/jet.js","../node_modules/jet-restate/index.js","../sources/views/chart.js","../sources/helpers/portlet.js","../sources/views/config/properties/index.js","../sources/views/config/properties/values.js","../sources/views/config/properties/group.js","../sources/views/config/properties/chart.js","../sources/views/config/properties/table.js","../sources/views/config/index.js","../sources/views/config/popup.js","../sources/views/filter.js","../sources/views/mode.js","../sources/views/toolbar.js","../sources/helpers/responsive.js","../sources/views/main.js","../sources/views/table.js","../sources/export_views.js","../node_modules/@xbs/rengine/dist/rengine.es6.js","../sources/models/LocalData.js","../sources/models/Backend.js","../sources/app.js","../sources/locales/en.js"],"sourcesContent":["class NavigationBlocked {\r\n}\n\nclass JetBase {\r\n    constructor(webix, config) {\r\n        this.webixJet = true;\r\n        this.webix = webix;\r\n        this._events = [];\r\n        this._subs = {};\r\n        this._data = {};\r\n        if (config && config.params)\r\n            webix.extend(this._data, config.params);\r\n    }\r\n    getRoot() {\r\n        return this._root;\r\n    }\r\n    destructor() {\r\n        this._detachEvents();\r\n        this._destroySubs();\r\n        this._events = this._container = this.app = this._parent = this._root = null;\r\n    }\r\n    setParam(id, value, url) {\r\n        if (this._data[id] !== value) {\r\n            this._data[id] = value;\r\n            this._segment.update(id, value, 0);\r\n            if (url) {\r\n                return this.show(null);\r\n            }\r\n        }\r\n    }\r\n    getParam(id, parent) {\r\n        const value = this._data[id];\r\n        if (typeof value !== \"undefined\" || !parent) {\r\n            return value;\r\n        }\r\n        const view = this.getParentView();\r\n        if (view) {\r\n            return view.getParam(id, parent);\r\n        }\r\n    }\r\n    getUrl() {\r\n        return this._segment.suburl();\r\n    }\r\n    getUrlString() {\r\n        return this._segment.toString();\r\n    }\r\n    getParentView() {\r\n        return this._parent;\r\n    }\r\n    $$(id) {\r\n        if (typeof id === \"string\") {\r\n            const root = this.getRoot();\r\n            return root.queryView((obj => (obj.config.id === id || obj.config.localId === id) &&\r\n                (obj.$scope === root.$scope)), \"self\");\r\n        }\r\n        else {\r\n            return id;\r\n        }\r\n    }\r\n    on(obj, name, code) {\r\n        const id = obj.attachEvent(name, code);\r\n        this._events.push({ obj, id });\r\n        return id;\r\n    }\r\n    contains(view) {\r\n        for (const key in this._subs) {\r\n            const kid = this._subs[key].view;\r\n            if (kid === view || kid.contains(view)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getSubView(name) {\r\n        const sub = this.getSubViewInfo(name);\r\n        if (sub) {\r\n            return sub.subview.view;\r\n        }\r\n    }\r\n    getSubViewInfo(name) {\r\n        const sub = this._subs[name || \"default\"];\r\n        if (sub) {\r\n            return { subview: sub, parent: this };\r\n        }\r\n        if (name === \"_top\") {\r\n            this._subs[name] = { url: \"\", id: null, popup: true };\r\n            return this.getSubViewInfo(name);\r\n        }\r\n        // when called from a child view, searches for nearest parent with subview\r\n        if (this._parent) {\r\n            return this._parent.getSubViewInfo(name);\r\n        }\r\n        return null;\r\n    }\r\n    _detachEvents() {\r\n        const events = this._events;\r\n        for (let i = events.length - 1; i >= 0; i--) {\r\n            events[i].obj.detachEvent(events[i].id);\r\n        }\r\n    }\r\n    _destroySubs() {\r\n        // destroy sub views\r\n        for (const key in this._subs) {\r\n            const subView = this._subs[key].view;\r\n            // it possible that subview was not loaded with any content yet\r\n            // so check on null\r\n            if (subView) {\r\n                subView.destructor();\r\n            }\r\n        }\r\n        // reset to prevent memory leaks\r\n        this._subs = {};\r\n    }\r\n    _init_url_data() {\r\n        const url = this._segment.current();\r\n        this._data = {};\r\n        this.webix.extend(this._data, url.params, true);\r\n    }\r\n    _getDefaultSub() {\r\n        if (this._subs.default) {\r\n            return this._subs.default;\r\n        }\r\n        for (const key in this._subs) {\r\n            const sub = this._subs[key];\r\n            if (!sub.branch && sub.view && key !== \"_top\") {\r\n                const child = sub.view._getDefaultSub();\r\n                if (child) {\r\n                    return child;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _routed_view() {\r\n        const parent = this.getParentView();\r\n        if (!parent) {\r\n            return true;\r\n        }\r\n        const sub = parent._getDefaultSub();\r\n        if (!sub && sub !== this) {\r\n            return false;\r\n        }\r\n        return parent._routed_view();\r\n    }\r\n}\n\nfunction parse(url) {\r\n    // remove starting /\r\n    if (url[0] === \"/\") {\r\n        url = url.substr(1);\r\n    }\r\n    // split url by \"/\"\r\n    const parts = url.split(\"/\");\r\n    const chunks = [];\r\n    // for each page in url\r\n    for (let i = 0; i < parts.length; i++) {\r\n        const test = parts[i];\r\n        const result = {};\r\n        // detect params\r\n        // support old \t\t\tsome:a=b:c=d\r\n        // and new notation\t\tsome?a=b&c=d\r\n        let pos = test.indexOf(\":\");\r\n        if (pos === -1) {\r\n            pos = test.indexOf(\"?\");\r\n        }\r\n        if (pos !== -1) {\r\n            const params = test.substr(pos + 1).split(/[\\:\\?\\&]/g);\r\n            // create hash of named params\r\n            for (const param of params) {\r\n                const dchunk = param.split(\"=\");\r\n                result[dchunk[0]] = decodeURIComponent(dchunk[1]);\r\n            }\r\n        }\r\n        // store parsed values\r\n        chunks[i] = {\r\n            page: (pos > -1 ? test.substr(0, pos) : test),\r\n            params: result,\r\n            isNew: true\r\n        };\r\n    }\r\n    // return array of page objects\r\n    return chunks;\r\n}\r\nfunction url2str(stack) {\r\n    const url = [];\r\n    for (const chunk of stack) {\r\n        url.push(\"/\" + chunk.page);\r\n        const params = obj2str(chunk.params);\r\n        if (params) {\r\n            url.push(\"?\" + params);\r\n        }\r\n    }\r\n    return url.join(\"\");\r\n}\r\nfunction obj2str(obj) {\r\n    const str = [];\r\n    for (const key in obj) {\r\n        if (typeof obj[key] === \"object\")\r\n            continue;\r\n        if (str.length) {\r\n            str.push(\"&\");\r\n        }\r\n        str.push(key + \"=\" + encodeURIComponent(obj[key]));\r\n    }\r\n    return str.join(\"\");\r\n}\n\nclass Route {\r\n    constructor(route, index) {\r\n        this._next = 1;\r\n        if (typeof route === \"string\") {\r\n            this.route = {\r\n                url: parse(route),\r\n                path: route\r\n            };\r\n        }\r\n        else {\r\n            this.route = route;\r\n        }\r\n        this.index = index;\r\n    }\r\n    current() {\r\n        return this.route.url[this.index];\r\n    }\r\n    next() {\r\n        return this.route.url[this.index + this._next];\r\n    }\r\n    suburl() {\r\n        return this.route.url.slice(this.index);\r\n    }\r\n    shift(params) {\r\n        const route = new Route(this.route, this.index + this._next);\r\n        route.setParams(route.route.url, params, route.index);\r\n        return route;\r\n    }\r\n    setParams(url, params, index) {\r\n        if (params) {\r\n            const old = url[index].params;\r\n            for (var key in params)\r\n                old[key] = params[key];\r\n        }\r\n    }\r\n    refresh() {\r\n        const url = this.route.url;\r\n        for (let i = this.index + 1; i < url.length; i++) {\r\n            url[i].isNew = true;\r\n        }\r\n    }\r\n    toString() {\r\n        const str = url2str(this.suburl());\r\n        return str ? str.substr(1) : \"\";\r\n    }\r\n    _join(path, kids) {\r\n        let url = this.route.url;\r\n        if (path === null) { // change of parameters, route elements are not affected\r\n            return url;\r\n        }\r\n        const old = this.route.url;\r\n        let reset = true;\r\n        url = old.slice(0, this.index + (kids ? this._next : 0));\r\n        if (path) {\r\n            url = url.concat(parse(path));\r\n            for (let i = 0; i < url.length; i++) {\r\n                if (old[i]) {\r\n                    url[i].view = old[i].view;\r\n                }\r\n                if (reset && old[i] && url[i].page === old[i].page) {\r\n                    url[i].isNew = false;\r\n                }\r\n                else if (url[i].isNew) {\r\n                    // if some segment was marked as new, all subsegments must be updated as well\r\n                    reset = false;\r\n                }\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n    append(path) {\r\n        const url = this._join(path, true);\r\n        this.route.path = url2str(url);\r\n        this.route.url = url;\r\n        return this.route.path;\r\n    }\r\n    show(path, view, kids) {\r\n        const url = this._join(path.url, kids);\r\n        this.setParams(url, path.params, this.index + (kids ? this._next : 0));\r\n        return new Promise((res, rej) => {\r\n            const redirect = url2str(url);\r\n            const obj = {\r\n                url,\r\n                redirect,\r\n                confirm: Promise.resolve()\r\n            };\r\n            const app = view ? view.app : null;\r\n            // when creating a new route, it possible that it will not have any content\r\n            // guard is not necessary in such case\r\n            if (app) {\r\n                const result = app.callEvent(\"app:guard\", [obj.redirect, view, obj]);\r\n                if (!result) {\r\n                    rej(new NavigationBlocked());\r\n                    return;\r\n                }\r\n            }\r\n            obj.confirm.catch(err => rej(err)).then(() => {\r\n                if (obj.redirect === null) {\r\n                    rej(new NavigationBlocked());\r\n                    return;\r\n                }\r\n                if (obj.redirect !== redirect) {\r\n                    app.show(obj.redirect);\r\n                    rej(new NavigationBlocked());\r\n                    return;\r\n                }\r\n                this.route.path = redirect;\r\n                this.route.url = url;\r\n                res();\r\n            });\r\n        });\r\n    }\r\n    size(n) {\r\n        this._next = n;\r\n    }\r\n    split() {\r\n        const route = {\r\n            url: this.route.url.slice(this.index + 1),\r\n            path: \"\"\r\n        };\r\n        if (route.url.length) {\r\n            route.path = url2str(route.url);\r\n        }\r\n        return new Route(route, 0);\r\n    }\r\n    update(name, value, index) {\r\n        const chunk = this.route.url[this.index + (index || 0)];\r\n        if (!chunk) {\r\n            this.route.url.push({ page: \"\", params: {} });\r\n            return this.update(name, value, index);\r\n        }\r\n        if (name === \"\") {\r\n            chunk.page = value;\r\n        }\r\n        else {\r\n            chunk.params[name] = value;\r\n        }\r\n        this.route.path = url2str(this.route.url);\r\n    }\r\n}\n\nclass JetView extends JetBase {\r\n    constructor(app, config) {\r\n        super(app.webix);\r\n        this.app = app;\r\n        //this.$config = config;\r\n        this._children = [];\r\n    }\r\n    ui(ui, config) {\r\n        config = config || {};\r\n        const container = config.container || ui.container;\r\n        const jetview = this.app.createView(ui);\r\n        this._children.push(jetview);\r\n        jetview.render(container, this._segment, this);\r\n        if (typeof ui !== \"object\" || (ui instanceof JetBase)) {\r\n            // raw webix UI\r\n            return jetview;\r\n        }\r\n        else {\r\n            return jetview.getRoot();\r\n        }\r\n    }\r\n    show(path, config) {\r\n        config = config || {};\r\n        // convert parameters object to url\r\n        if (typeof path === \"object\") {\r\n            for (const key in path) {\r\n                this.setParam(key, path[key]);\r\n            }\r\n            path = null;\r\n        }\r\n        else {\r\n            // deligate to app in case of root prefix\r\n            if (path.substr(0, 1) === \"/\") {\r\n                return this.app.show(path, config);\r\n            }\r\n            // local path, do nothing\r\n            if (path.indexOf(\"./\") === 0) {\r\n                path = path.substr(2);\r\n            }\r\n            // parent path, call parent view\r\n            if (path.indexOf(\"../\") === 0) {\r\n                const parent = this.getParentView();\r\n                if (parent) {\r\n                    return parent.show(path.substr(3), config);\r\n                }\r\n                else {\r\n                    return this.app.show(\"/\" + path.substr(3));\r\n                }\r\n            }\r\n            const sub = this.getSubViewInfo(config.target);\r\n            if (sub) {\r\n                if (sub.parent !== this) {\r\n                    return sub.parent.show(path, config);\r\n                }\r\n                else if (config.target && config.target !== \"default\") {\r\n                    return this._renderFrameLock(config.target, sub.subview, {\r\n                        url: path,\r\n                        params: config.params,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (path) {\r\n                    return this.app.show(\"/\" + path, config);\r\n                }\r\n            }\r\n        }\r\n        return this._show(this._segment, { url: path, params: config.params }, this);\r\n    }\r\n    _show(segment, path, view) {\r\n        return segment.show(path, view, true).then(() => {\r\n            this._init_url_data();\r\n            return this._urlChange();\r\n        }).then(() => {\r\n            if (segment.route.linkRouter) {\r\n                this.app.getRouter().set(segment.route.path, { silent: true });\r\n                this.app.callEvent(\"app:route\", [segment.route.path]);\r\n            }\r\n        });\r\n    }\r\n    init(_$view, _$) {\r\n        // stub\r\n    }\r\n    ready(_$view, _$url) {\r\n        // stub\r\n    }\r\n    config() {\r\n        this.app.webix.message(\"View:Config is not implemented\");\r\n    }\r\n    urlChange(_$view, _$url) {\r\n        // stub\r\n    }\r\n    destroy() {\r\n        // stub\r\n    }\r\n    destructor() {\r\n        this.destroy();\r\n        this._destroyKids();\r\n        // destroy actual UI\r\n        if (this._root) {\r\n            this._root.destructor();\r\n            super.destructor();\r\n        }\r\n    }\r\n    use(plugin, config) {\r\n        plugin(this.app, this, config);\r\n    }\r\n    refresh() {\r\n        const url = this.getUrl();\r\n        this.destroy();\r\n        this._destroyKids();\r\n        this._destroySubs();\r\n        this._detachEvents();\r\n        if (this._container.tagName) {\r\n            this._root.destructor();\r\n        }\r\n        this._segment.refresh();\r\n        return this._render(this._segment);\r\n    }\r\n    render(root, url, parent) {\r\n        if (typeof url === \"string\") {\r\n            url = new Route(url, 0);\r\n        }\r\n        this._segment = url;\r\n        this._parent = parent;\r\n        this._init_url_data();\r\n        root = root || document.body;\r\n        const _container = (typeof root === \"string\") ? this.webix.toNode(root) : root;\r\n        if (this._container !== _container) {\r\n            this._container = _container;\r\n            return this._render(url);\r\n        }\r\n        else {\r\n            return this._urlChange().then(() => this.getRoot());\r\n        }\r\n    }\r\n    _render(url) {\r\n        const config = this.config();\r\n        if (config.then) {\r\n            return config.then(cfg => this._render_final(cfg, url));\r\n        }\r\n        else {\r\n            return this._render_final(config, url);\r\n        }\r\n    }\r\n    _render_final(config, url) {\r\n        // get previous view in the same slot\r\n        let slot = null;\r\n        let container = null;\r\n        let show = false;\r\n        if (!this._container.tagName) {\r\n            slot = this._container;\r\n            if (slot.popup) {\r\n                container = document.body;\r\n                show = true;\r\n            }\r\n            else {\r\n                container = this.webix.$$(slot.id);\r\n            }\r\n        }\r\n        else {\r\n            container = this._container;\r\n        }\r\n        // view already destroyed\r\n        if (!this.app || !container) {\r\n            return Promise.reject(null);\r\n        }\r\n        let response;\r\n        const current = this._segment.current();\r\n        // using wrapper object, so ui can be changed from app:render event\r\n        const result = { ui: {} };\r\n        this.app.copyConfig(config, result.ui, this._subs);\r\n        this.app.callEvent(\"app:render\", [this, url, result]);\r\n        result.ui.$scope = this;\r\n        /* destroy old HTML attached views before creating new one */\r\n        if (!slot && current.isNew && current.view) {\r\n            current.view.destructor();\r\n        }\r\n        try {\r\n            // special handling for adding inside of multiview - preserve old id\r\n            if (slot && !show) {\r\n                const oldui = container;\r\n                const parent = oldui.getParentView();\r\n                if (parent && parent.name === \"multiview\" && !result.ui.id) {\r\n                    result.ui.id = oldui.config.id;\r\n                }\r\n            }\r\n            this._root = this.app.webix.ui(result.ui, container);\r\n            const asWin = this._root;\r\n            // check for url added to ignore this.ui calls\r\n            if (show && asWin.setPosition && !asWin.isVisible()) {\r\n                asWin.show();\r\n            }\r\n            // check, if we are replacing some older view\r\n            if (slot) {\r\n                if (slot.view && slot.view !== this && slot.view !== this.app) {\r\n                    slot.view.destructor();\r\n                }\r\n                slot.id = this._root.config.id;\r\n                if (this.getParentView() || !this.app.app)\r\n                    slot.view = this;\r\n                else {\r\n                    // when we have subapp, set whole app as a view\r\n                    // so on destruction, the whole app will be destroyed\r\n                    slot.view = this.app;\r\n                }\r\n            }\r\n            if (current.isNew) {\r\n                current.view = this;\r\n                current.isNew = false;\r\n            }\r\n            response = Promise.resolve(this._init(this._root, url)).then(() => {\r\n                return this._urlChange().then(() => {\r\n                    this._initUrl = null;\r\n                    return this.ready(this._root, url.suburl());\r\n                });\r\n            });\r\n        }\r\n        catch (e) {\r\n            response = Promise.reject(e);\r\n        }\r\n        return response.catch(err => this._initError(this, err));\r\n    }\r\n    _init(view, url) {\r\n        return this.init(view, url.suburl());\r\n    }\r\n    _urlChange() {\r\n        this.app.callEvent(\"app:urlchange\", [this, this._segment]);\r\n        const waits = [];\r\n        for (const key in this._subs) {\r\n            const frame = this._subs[key];\r\n            const wait = this._renderFrameLock(key, frame, null);\r\n            if (wait) {\r\n                waits.push(wait);\r\n            }\r\n        }\r\n        return Promise.all(waits).then(() => {\r\n            return this.urlChange(this._root, this._segment.suburl());\r\n        });\r\n    }\r\n    _renderFrameLock(key, frame, path) {\r\n        // if subview is not occupied by some rendering yet\r\n        if (!frame.lock) {\r\n            // retreive and store rendering end promise\r\n            const lock = this._renderFrame(key, frame, path);\r\n            if (lock) {\r\n                // clear lock after frame rendering\r\n                // as promise.finally is not supported by  Webix lesser than 6.2\r\n                // using a more verbose notation\r\n                frame.lock = lock.then(() => frame.lock = null, () => frame.lock = null);\r\n            }\r\n        }\r\n        // return rendering end promise\r\n        return frame.lock;\r\n    }\r\n    _renderFrame(key, frame, path) {\r\n        //default route\r\n        if (key === \"default\") {\r\n            if (this._segment.next()) {\r\n                // we have a next segment in url, render it\r\n                let params = path ? path.params : null;\r\n                if (frame.params) {\r\n                    params = this.webix.extend(params || {}, frame.params);\r\n                }\r\n                return this._createSubView(frame, this._segment.shift(params));\r\n            }\r\n            else if (frame.view && frame.popup) {\r\n                // there is no next segment, delete the existing sub-view\r\n                frame.view.destructor();\r\n                frame.view = null;\r\n            }\r\n        }\r\n        //if new path provided, set it to the frame\r\n        if (path !== null) {\r\n            frame.url = path.url;\r\n            if (frame.params) {\r\n                path.params = this.webix.extend(path.params || {}, frame.params);\r\n            }\r\n        }\r\n        // in case of routed sub-view\r\n        if (frame.route) {\r\n            // we have a new path for sub-view\r\n            if (path !== null) {\r\n                return frame.route.show(path, frame.view).then(() => {\r\n                    return this._createSubView(frame, frame.route);\r\n                });\r\n            }\r\n            // do not trigger onChange for isolated sub-views\r\n            if (frame.branch) {\r\n                return;\r\n            }\r\n        }\r\n        let view = frame.view;\r\n        // if view doesn't exists yet, init it\r\n        if (!view && frame.url) {\r\n            if (typeof frame.url === \"string\") {\r\n                // string, so we have isolated subview url\r\n                frame.route = new Route(frame.url, 0);\r\n                if (path)\r\n                    frame.route.setParams(frame.route.route.url, path.params, 0);\r\n                if (frame.params)\r\n                    frame.route.setParams(frame.route.route.url, frame.params, 0);\r\n                return this._createSubView(frame, frame.route);\r\n            }\r\n            else {\r\n                // object, so we have an embeded subview\r\n                if (typeof frame.url === \"function\" && !(view instanceof frame.url)) {\r\n                    view = new (this.app._override(frame.url))(this.app, \"\");\r\n                }\r\n                if (!view) {\r\n                    view = frame.url;\r\n                }\r\n            }\r\n        }\r\n        // trigger onChange for already existed view\r\n        if (view) {\r\n            return view.render(frame, (frame.route || this._segment), this);\r\n        }\r\n    }\r\n    _initError(view, err) {\r\n        /*\r\n            if view is destroyed, ignore any view related errors\r\n        */\r\n        if (this.app) {\r\n            this.app.error(\"app:error:initview\", [err, view]);\r\n        }\r\n        return true;\r\n    }\r\n    _createSubView(sub, suburl) {\r\n        return this.app.createFromURL(suburl.current()).then(view => {\r\n            return view.render(sub, suburl, this);\r\n        });\r\n    }\r\n    _destroyKids() {\r\n        // destroy child views\r\n        const uis = this._children;\r\n        for (let i = uis.length - 1; i >= 0; i--) {\r\n            if (uis[i] && uis[i].destructor) {\r\n                uis[i].destructor();\r\n            }\r\n        }\r\n        // reset vars for better GC processing\r\n        this._children = [];\r\n    }\r\n}\n\n// wrapper for raw objects and Jet 1.x structs\r\nclass JetViewRaw extends JetView {\r\n    constructor(app, config) {\r\n        super(app, config);\r\n        this._ui = config.ui;\r\n    }\r\n    config() {\r\n        return this._ui;\r\n    }\r\n}\n\nclass SubRouter {\r\n    constructor(cb, config, app) {\r\n        this.path = \"\";\r\n        this.app = app;\r\n    }\r\n    set(path, config) {\r\n        this.path = path;\r\n        const a = this.app;\r\n        a.app.getRouter().set(a._segment.append(this.path), { silent: true });\r\n    }\r\n    get() {\r\n        return this.path;\r\n    }\r\n}\n\nlet _once = true;\r\nclass JetAppBase extends JetBase {\r\n    constructor(config) {\r\n        const webix = (config || {}).webix || window.webix;\r\n        config = webix.extend({\r\n            name: \"App\",\r\n            version: \"1.0\",\r\n            start: \"/home\"\r\n        }, config, true);\r\n        super(webix, config);\r\n        this.config = config;\r\n        this.app = this.config.app;\r\n        this.ready = Promise.resolve();\r\n        this._services = {};\r\n        this.webix.extend(this, this.webix.EventSystem);\r\n    }\r\n    getUrl() {\r\n        return this._subSegment.suburl();\r\n    }\r\n    getUrlString() {\r\n        return this._subSegment.toString();\r\n    }\r\n    getService(name) {\r\n        let obj = this._services[name];\r\n        if (typeof obj === \"function\") {\r\n            obj = this._services[name] = obj(this);\r\n        }\r\n        return obj;\r\n    }\r\n    setService(name, handler) {\r\n        this._services[name] = handler;\r\n    }\r\n    destructor() {\r\n        this.getSubView().destructor();\r\n        super.destructor();\r\n    }\r\n    // copy object and collect extra handlers\r\n    copyConfig(obj, target, config) {\r\n        // raw ui config\r\n        if (obj instanceof JetBase ||\r\n            (typeof obj === \"function\" && obj.prototype instanceof JetBase)) {\r\n            obj = { $subview: obj };\r\n        }\r\n        // subview placeholder\r\n        if (typeof obj.$subview != \"undefined\") {\r\n            return this.addSubView(obj, target, config);\r\n        }\r\n        // process sub-properties\r\n        const isArray = obj instanceof Array;\r\n        target = target || (isArray ? [] : {});\r\n        for (const method in obj) {\r\n            let point = obj[method];\r\n            // view class\r\n            if (typeof point === \"function\" && point.prototype instanceof JetBase) {\r\n                point = { $subview: point };\r\n            }\r\n            if (point && typeof point === \"object\" &&\r\n                !(point instanceof this.webix.DataCollection) && !(point instanceof RegExp) && !(point instanceof Map)) {\r\n                if (point instanceof Date) {\r\n                    target[method] = new Date(point);\r\n                }\r\n                else {\r\n                    const copy = this.copyConfig(point, (point instanceof Array ? [] : {}), config);\r\n                    if (copy !== null) {\r\n                        if (isArray)\r\n                            target.push(copy);\r\n                        else\r\n                            target[method] = copy;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                target[method] = point;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    getRouter() {\r\n        return this.$router;\r\n    }\r\n    clickHandler(e, target) {\r\n        if (e) {\r\n            target = target || (e.target || e.srcElement);\r\n            if (target && target.getAttribute) {\r\n                const trigger = target.getAttribute(\"trigger\");\r\n                if (trigger) {\r\n                    this._forView(target, view => view.app.trigger(trigger));\r\n                    e.cancelBubble = true;\r\n                    return e.preventDefault();\r\n                }\r\n                const route = target.getAttribute(\"route\");\r\n                if (route) {\r\n                    this._forView(target, view => view.show(route));\r\n                    e.cancelBubble = true;\r\n                    return e.preventDefault();\r\n                }\r\n            }\r\n        }\r\n        const parent = target.parentNode;\r\n        if (parent) {\r\n            this.clickHandler(e, parent);\r\n        }\r\n    }\r\n    getRoot() {\r\n        return this.getSubView().getRoot();\r\n    }\r\n    refresh() {\r\n        if (!this._subSegment) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.getSubView().refresh().then(view => {\r\n            this.callEvent(\"app:route\", [this.getUrl()]);\r\n            return view;\r\n        });\r\n    }\r\n    loadView(url) {\r\n        const views = this.config.views;\r\n        let result = null;\r\n        if (url === \"\") {\r\n            return Promise.resolve(this._loadError(\"\", new Error(\"Webix Jet: Empty url segment\")));\r\n        }\r\n        try {\r\n            if (views) {\r\n                if (typeof views === \"function\") {\r\n                    // custom loading strategy\r\n                    result = views(url);\r\n                }\r\n                else {\r\n                    // predefined hash\r\n                    result = views[url];\r\n                }\r\n                if (typeof result === \"string\") {\r\n                    url = result;\r\n                    result = null;\r\n                }\r\n            }\r\n            if (!result) {\r\n                if (url === \"_hidden\") {\r\n                    result = { hidden: true };\r\n                }\r\n                else if (url === \"_blank\") {\r\n                    result = {};\r\n                }\r\n                else {\r\n                    url = url.replace(/\\./g, \"/\");\r\n                    result = this.require(\"jet-views\", url);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            result = this._loadError(url, e);\r\n        }\r\n        // custom handler can return view or its promise\r\n        if (!result.then) {\r\n            result = Promise.resolve(result);\r\n        }\r\n        // set error handler\r\n        result = result\r\n            .then(module => module.__esModule ? module.default : module)\r\n            .catch(err => this._loadError(url, err));\r\n        return result;\r\n    }\r\n    _forView(target, handler) {\r\n        const view = this.webix.$$(target);\r\n        if (view) {\r\n            handler(view.$scope);\r\n        }\r\n    }\r\n    _loadViewDynamic(url) {\r\n        return null;\r\n    }\r\n    createFromURL(chunk) {\r\n        let view;\r\n        if (chunk.isNew || !chunk.view) {\r\n            view = this.loadView(chunk.page)\r\n                .then(ui => this.createView(ui, name, chunk.params));\r\n        }\r\n        else {\r\n            view = Promise.resolve(chunk.view);\r\n        }\r\n        return view;\r\n    }\r\n    _override(ui) {\r\n        const over = this.config.override;\r\n        if (over) {\r\n            let dv;\r\n            while (ui) {\r\n                dv = ui;\r\n                ui = over.get(ui);\r\n            }\r\n            return dv;\r\n        }\r\n        return ui;\r\n    }\r\n    createView(ui, name, params) {\r\n        ui = this._override(ui);\r\n        let obj;\r\n        if (typeof ui === \"function\") {\r\n            if (ui.prototype instanceof JetAppBase) {\r\n                // UI class\r\n                return new ui({ app: this, name, params, router: SubRouter });\r\n            }\r\n            else if (ui.prototype instanceof JetBase) {\r\n                // UI class\r\n                return new ui(this, { name, params });\r\n            }\r\n            else {\r\n                // UI factory functions\r\n                ui = ui(this);\r\n            }\r\n        }\r\n        if (ui instanceof JetBase) {\r\n            obj = ui;\r\n        }\r\n        else {\r\n            // UI object\r\n            obj = new JetViewRaw(this, { name, ui });\r\n        }\r\n        return obj;\r\n    }\r\n    // show view path\r\n    show(url, config) {\r\n        if (url && this.app && url.indexOf(\"//\") == 0)\r\n            return this.app.show(url.substr(1), config);\r\n        return this.render(this._container, url || this.config.start, config);\r\n    }\r\n    // event helpers\r\n    trigger(name, ...rest) {\r\n        this.apply(name, rest);\r\n    }\r\n    apply(name, data) {\r\n        this.callEvent(name, data);\r\n    }\r\n    action(name) {\r\n        return this.webix.bind(function (...rest) {\r\n            this.apply(name, rest);\r\n        }, this);\r\n    }\r\n    on(name, handler) {\r\n        this.attachEvent(name, handler);\r\n    }\r\n    use(plugin, config) {\r\n        plugin(this, null, config);\r\n    }\r\n    error(name, er) {\r\n        this.callEvent(name, er);\r\n        this.callEvent(\"app:error\", er);\r\n        /* tslint:disable */\r\n        if (this.config.debug) {\r\n            for (var i = 0; i < er.length; i++) {\r\n                console.error(er[i]);\r\n                if (er[i] instanceof Error) {\r\n                    let text = er[i].message;\r\n                    if (text.indexOf(\"Module build failed\") === 0) {\r\n                        text = text.replace(/\\x1b\\[[0-9;]*m/g, \"\");\r\n                        document.body.innerHTML = `<pre style='font-size:16px; background-color: #ec6873; color: #000; padding:10px;'>${text}</pre>`;\r\n                    }\r\n                    else {\r\n                        text += \"<br><br>Check console for more details\";\r\n                        this.webix.message({ type: \"error\", text: text, expire: -1 });\r\n                    }\r\n                }\r\n            }\r\n            debugger;\r\n        }\r\n        /* tslint:enable */\r\n    }\r\n    // renders top view\r\n    render(root, url, config) {\r\n        this._container = (typeof root === \"string\") ?\r\n            this.webix.toNode(root) :\r\n            (root || document.body);\r\n        const firstInit = !this.$router;\r\n        let path = null;\r\n        if (firstInit) {\r\n            if (_once && \"tagName\" in this._container) {\r\n                this.webix.event(document.body, \"click\", e => this.clickHandler(e));\r\n                _once = false;\r\n            }\r\n            if (typeof url === \"string\") {\r\n                url = new Route(url, 0);\r\n            }\r\n            this._subSegment = this._first_start(url);\r\n            this._subSegment.route.linkRouter = true;\r\n        }\r\n        else {\r\n            if (typeof url === \"string\") {\r\n                path = url;\r\n            }\r\n            else {\r\n                if (this.app) {\r\n                    path = url.split().route.path || this.config.start;\r\n                }\r\n                else {\r\n                    path = url.toString();\r\n                }\r\n            }\r\n        }\r\n        const params = config ? config.params : this.config.params || null;\r\n        const top = this.getSubView();\r\n        const segment = this._subSegment;\r\n        const ready = segment\r\n            .show({ url: path, params }, top)\r\n            .then(() => this.createFromURL(segment.current()))\r\n            .then(view => view.render(root, segment))\r\n            .then(base => {\r\n            this.$router.set(segment.route.path, { silent: true });\r\n            this.callEvent(\"app:route\", [this.getUrl()]);\r\n            return base;\r\n        });\r\n        this.ready = this.ready.then(() => ready);\r\n        return ready;\r\n    }\r\n    getSubView() {\r\n        if (this._subSegment) {\r\n            const view = this._subSegment.current().view;\r\n            if (view)\r\n                return view;\r\n        }\r\n        return new JetView(this, {});\r\n    }\r\n    require(type, url) { return null; }\r\n    _first_start(route) {\r\n        this._segment = route;\r\n        const cb = (a) => setTimeout(() => {\r\n            this.show(a).catch(e => {\r\n                if (!(e instanceof NavigationBlocked))\r\n                    throw e;\r\n            });\r\n        }, 1);\r\n        this.$router = new (this.config.router)(cb, this.config, this);\r\n        // start animation for top-level app\r\n        if (this._container === document.body && this.config.animation !== false) {\r\n            const node = this._container;\r\n            this.webix.html.addCss(node, \"webixappstart\");\r\n            setTimeout(() => {\r\n                this.webix.html.removeCss(node, \"webixappstart\");\r\n                this.webix.html.addCss(node, \"webixapp\");\r\n            }, 10);\r\n        }\r\n        if (!route) {\r\n            // if no url defined, check router first\r\n            let urlString = this.$router.get();\r\n            if (!urlString) {\r\n                urlString = this.config.start;\r\n                this.$router.set(urlString, { silent: true });\r\n            }\r\n            route = new Route(urlString, 0);\r\n        }\r\n        else if (this.app) {\r\n            const now = route.current().view;\r\n            route.current().view = this;\r\n            if (route.next()) {\r\n                route.refresh();\r\n                route = route.split();\r\n            }\r\n            else {\r\n                route = new Route(this.config.start, 0);\r\n            }\r\n            route.current().view = now;\r\n        }\r\n        return route;\r\n    }\r\n    // error during view resolving\r\n    _loadError(url, err) {\r\n        this.error(\"app:error:resolve\", [err, url]);\r\n        return { template: \" \" };\r\n    }\r\n    addSubView(obj, target, config) {\r\n        const url = obj.$subview !== true ? obj.$subview : null;\r\n        const name = obj.name || (url ? this.webix.uid() : \"default\");\r\n        target.id = obj.id || \"s\" + this.webix.uid();\r\n        const view = config[name] = {\r\n            id: target.id,\r\n            url,\r\n            branch: obj.branch,\r\n            popup: obj.popup,\r\n            params: obj.params\r\n        };\r\n        return view.popup ? null : target;\r\n    }\r\n}\n\nclass HashRouter {\r\n    constructor(cb, config) {\r\n        this.config = config || {};\r\n        this._detectPrefix();\r\n        this.cb = cb;\r\n        window.onpopstate = () => this.cb(this.get());\r\n    }\r\n    set(path, config) {\r\n        if (this.config.routes) {\r\n            const compare = path.split(\"?\", 2);\r\n            for (const key in this.config.routes) {\r\n                if (this.config.routes[key] === compare[0]) {\r\n                    path = key + (compare.length > 1 ? \"?\" + compare[1] : \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this.get() !== path) {\r\n            window.history.pushState(null, null, this.prefix + this.sufix + path);\r\n        }\r\n        if (!config || !config.silent) {\r\n            setTimeout(() => this.cb(path), 1);\r\n        }\r\n    }\r\n    get() {\r\n        let path = this._getRaw().replace(this.prefix, \"\").replace(this.sufix, \"\");\r\n        path = (path !== \"/\" && path !== \"#\") ? path : \"\";\r\n        if (this.config.routes) {\r\n            const compare = path.split(\"?\", 2);\r\n            const key = this.config.routes[compare[0]];\r\n            if (key) {\r\n                path = key + (compare.length > 1 ? \"?\" + compare[1] : \"\");\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    _detectPrefix() {\r\n        // use \"#!\" for backward compatibility\r\n        const sufix = this.config.routerPrefix;\r\n        this.sufix = \"#\" + ((typeof sufix === \"undefined\") ? \"!\" : sufix);\r\n        this.prefix = document.location.href.split(\"#\", 2)[0];\r\n    }\r\n    _getRaw() {\r\n        return document.location.href;\r\n    }\r\n}\n\nlet isPatched = false;\r\nfunction patch(w) {\r\n    if (isPatched || !w) {\r\n        return;\r\n    }\r\n    isPatched = true;\r\n    // custom promise for IE8\r\n    const win = window;\r\n    if (!win.Promise) {\r\n        win.Promise = w.promise;\r\n    }\r\n    const version = w.version.split(\".\");\r\n    // will be fixed in webix 5.3\r\n    if (version[0] * 10 + version[1] * 1 < 53) {\r\n        w.ui.freeze = function (handler) {\r\n            // disabled because webix jet 5.0 can't handle resize of scrollview correctly\r\n            // w.ui.$freeze = true;\r\n            const res = handler();\r\n            if (res && res.then) {\r\n                res.then(function (some) {\r\n                    w.ui.$freeze = false;\r\n                    w.ui.resize();\r\n                    return some;\r\n                });\r\n            }\r\n            else {\r\n                w.ui.$freeze = false;\r\n                w.ui.resize();\r\n            }\r\n            return res;\r\n        };\r\n    }\r\n    // adding views as classes\r\n    const baseAdd = w.ui.baselayout.prototype.addView;\r\n    const baseRemove = w.ui.baselayout.prototype.removeView;\r\n    const config = {\r\n        addView(view, index) {\r\n            // trigger logic only for widgets inside of jet-view\r\n            // ignore case when addView used with already initialized widget\r\n            if (this.$scope && this.$scope.webixJet && !view.queryView) {\r\n                const jview = this.$scope;\r\n                const subs = {};\r\n                view = jview.app.copyConfig(view, {}, subs);\r\n                baseAdd.apply(this, [view, index]);\r\n                for (const key in subs) {\r\n                    jview._renderFrame(key, subs[key], null).then(() => {\r\n                        jview._subs[key] = subs[key];\r\n                    });\r\n                }\r\n                return view.id;\r\n            }\r\n            else {\r\n                return baseAdd.apply(this, arguments);\r\n            }\r\n        },\r\n        removeView() {\r\n            baseRemove.apply(this, arguments);\r\n            if (this.$scope && this.$scope.webixJet) {\r\n                const subs = this.$scope._subs;\r\n                // check all sub-views, destroy and clean the removed one\r\n                for (const key in subs) {\r\n                    const test = subs[key];\r\n                    if (!w.$$(test.id)) {\r\n                        test.view.destructor();\r\n                        delete subs[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    w.extend(w.ui.layout.prototype, config, true);\r\n    w.extend(w.ui.baselayout.prototype, config, true);\r\n    // wrapper for using Jet Apps as views\r\n    w.protoUI({\r\n        name: \"jetapp\",\r\n        $init(cfg) {\r\n            this.$app = new this.app(cfg);\r\n            const id = w.uid().toString();\r\n            cfg.body = { id };\r\n            this.$ready.push(function () {\r\n                this.callEvent(\"onInit\", [this.$app]);\r\n                this.$app.render({ id });\r\n            });\r\n        }\r\n    }, w.ui.proxy, w.EventSystem);\r\n}\n\nclass JetApp extends JetAppBase {\r\n    constructor(config) {\r\n        config.router = config.router || HashRouter;\r\n        super(config);\r\n        patch(this.webix);\r\n    }\r\n    require(type, url) {\r\n        return require(type + \"/\" + url);\r\n    }\r\n}\n\nclass StoreRouter {\r\n    constructor(cb, config, app) {\r\n        this.storage = config.storage || app.webix.storage.session;\r\n        this.name = (config.storeName || config.id + \":route\");\r\n        this.cb = cb;\r\n    }\r\n    set(path, config) {\r\n        this.storage.put(this.name, path);\r\n        if (!config || !config.silent) {\r\n            setTimeout(() => this.cb(path), 1);\r\n        }\r\n    }\r\n    get() {\r\n        return this.storage.get(this.name);\r\n    }\r\n}\n\nclass UrlRouter extends HashRouter {\r\n    _detectPrefix() {\r\n        this.prefix = \"\";\r\n        this.sufix = this.config.routerPrefix || \"\";\r\n    }\r\n    _getRaw() {\r\n        return document.location.pathname + (document.location.search || \"\");\r\n    }\r\n}\n\nclass EmptyRouter {\r\n    constructor(cb, _$config) {\r\n        this.path = \"\";\r\n        this.cb = cb;\r\n    }\r\n    set(path, config) {\r\n        this.path = path;\r\n        if (!config || !config.silent) {\r\n            setTimeout(() => this.cb(path), 1);\r\n        }\r\n    }\r\n    get() {\r\n        return this.path;\r\n    }\r\n}\n\nfunction UnloadGuard(app, view, config) {\r\n    view.on(app, `app:guard`, function (_$url, point, promise) {\r\n        if (point === view || point.contains(view)) {\r\n            const res = config();\r\n            if (res === false) {\r\n                promise.confirm = Promise.reject(new NavigationBlocked());\r\n            }\r\n            else {\r\n                promise.confirm = promise.confirm.then(() => res);\r\n            }\r\n        }\r\n    });\r\n}\n\n//     (c) 2012-2018 Airbnb, Inc.\n\n// var has = require('has');\nfunction has(store, key) {\n  return Object.prototype.hasOwnProperty.call(store, key);\n}\n// var forEach = require('for-each');\nfunction forEach(obj, handler, context) {\n  for (var key in obj) {\n    if (has(obj, key)) {\n      handler.call((context || obj), obj[key], key, obj);\n    }\n  }\n}\n// var trim = require('string.prototype.trim');\nfunction trim(str) {\n  return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n}\n// var warning = require('warning');\nfunction warn(message) {\n  message = 'Warning: ' + message;\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try { throw new Error(message); } catch (x) {}\n}\n\nvar replace = String.prototype.replace;\nvar split = String.prototype.split;\n\n// #### Pluralization methods\n// The string that separates the different phrase possibilities.\nvar delimiter = '||||';\n\nvar russianPluralGroups = function (n) {\n  var end = n % 10;\n  if (n !== 11 && end === 1) {\n    return 0;\n  }\n  if (2 <= end && end <= 4 && !(n >= 12 && n <= 14)) {\n    return 1;\n  }\n  return 2;\n};\n\n// Mapping from pluralization group plural logic.\nvar pluralTypes = {\n  arabic: function (n) {\n    // http://www.arabeyes.org/Plural_Forms\n    if (n < 3) { return n; }\n    var lastTwo = n % 100;\n    if (lastTwo >= 3 && lastTwo <= 10) return 3;\n    return lastTwo >= 11 ? 4 : 5;\n  },\n  bosnian_serbian: russianPluralGroups,\n  chinese: function () { return 0; },\n  croatian: russianPluralGroups,\n  french: function (n) { return n > 1 ? 1 : 0; },\n  german: function (n) { return n !== 1 ? 1 : 0; },\n  russian: russianPluralGroups,\n  lithuanian: function (n) {\n    if (n % 10 === 1 && n % 100 !== 11) { return 0; }\n    return n % 10 >= 2 && n % 10 <= 9 && (n % 100 < 11 || n % 100 > 19) ? 1 : 2;\n  },\n  czech: function (n) {\n    if (n === 1) { return 0; }\n    return (n >= 2 && n <= 4) ? 1 : 2;\n  },\n  polish: function (n) {\n    if (n === 1) { return 0; }\n    var end = n % 10;\n    return 2 <= end && end <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n  },\n  icelandic: function (n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; },\n  slovenian: function (n) {\n    var lastTwo = n % 100;\n    if (lastTwo === 1) {\n      return 0;\n    }\n    if (lastTwo === 2) {\n      return 1;\n    }\n    if (lastTwo === 3 || lastTwo === 4) {\n      return 2;\n    }\n    return 3;\n  }\n};\n\n\n// Mapping from pluralization group to individual language codes/locales.\n// Will look up based on exact match, if not found and it's a locale will parse the locale\n// for language code, and if that does not exist will default to 'en'\nvar pluralTypeToLanguages = {\n  arabic: ['ar'],\n  bosnian_serbian: ['bs-Latn-BA', 'bs-Cyrl-BA', 'srl-RS', 'sr-RS'],\n  chinese: ['id', 'id-ID', 'ja', 'ko', 'ko-KR', 'lo', 'ms', 'th', 'th-TH', 'zh'],\n  croatian: ['hr', 'hr-HR'],\n  german: ['fa', 'da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hi-IN', 'hu', 'hu-HU', 'it', 'nl', 'no', 'pt', 'sv', 'tr'],\n  french: ['fr', 'tl', 'pt-br'],\n  russian: ['ru', 'ru-RU'],\n  lithuanian: ['lt'],\n  czech: ['cs', 'cs-CZ', 'sk'],\n  polish: ['pl'],\n  icelandic: ['is'],\n  slovenian: ['sl-SL']\n};\n\nfunction langToTypeMap(mapping) {\n  var ret = {};\n  forEach(mapping, function (langs, type) {\n    forEach(langs, function (lang) {\n      ret[lang] = type;\n    });\n  });\n  return ret;\n}\n\nfunction pluralTypeName(locale) {\n  var langToPluralType = langToTypeMap(pluralTypeToLanguages);\n  return langToPluralType[locale]\n    || langToPluralType[split.call(locale, /-/, 1)[0]]\n    || langToPluralType.en;\n}\n\nfunction pluralTypeIndex(locale, count) {\n  return pluralTypes[pluralTypeName(locale)](count);\n}\n\nfunction escape(token) {\n  return token.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction constructTokenRegex(opts) {\n  var prefix = (opts && opts.prefix) || '%{';\n  var suffix = (opts && opts.suffix) || '}';\n\n  if (prefix === delimiter || suffix === delimiter) {\n    throw new RangeError('\"' + delimiter + '\" token is reserved for pluralization');\n  }\n\n  return new RegExp(escape(prefix) + '(.*?)' + escape(suffix), 'g');\n}\n\nvar dollarRegex = /\\$/g;\nvar dollarBillsYall = '$$';\nvar defaultTokenRegex = /%\\{(.*?)\\}/g;\n\n// ### transformPhrase(phrase, substitutions, locale)\n//\n// Takes a phrase string and transforms it by choosing the correct\n// plural form and interpolating it.\n//\n//     transformPhrase('Hello, %{name}!', {name: 'Spike'});\n//     // \"Hello, Spike!\"\n//\n// The correct plural form is selected if substitutions.smart_count\n// is set. You can pass in a number instead of an Object as `substitutions`\n// as a shortcut for `smart_count`.\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 1}, 'en');\n//     // \"1 new message\"\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', {smart_count: 2}, 'en');\n//     // \"2 new messages\"\n//\n//     transformPhrase('%{smart_count} new messages |||| 1 new message', 5, 'en');\n//     // \"5 new messages\"\n//\n// You should pass in a third argument, the locale, to specify the correct plural type.\n// It defaults to `'en'` with 2 plural forms.\nfunction transformPhrase(phrase, substitutions, locale, tokenRegex) {\n  if (typeof phrase !== 'string') {\n    throw new TypeError('Polyglot.transformPhrase expects argument #1 to be string');\n  }\n\n  if (substitutions == null) {\n    return phrase;\n  }\n\n  var result = phrase;\n  var interpolationRegex = tokenRegex || defaultTokenRegex;\n\n  // allow number as a pluralization shortcut\n  var options = typeof substitutions === 'number' ? { smart_count: substitutions } : substitutions;\n\n  // Select plural form: based on a phrase text that contains `n`\n  // plural forms separated by `delimiter`, a `locale`, and a `substitutions.smart_count`,\n  // choose the correct plural form. This is only done if `count` is set.\n  if (options.smart_count != null && result) {\n    var texts = split.call(result, delimiter);\n    result = trim(texts[pluralTypeIndex(locale || 'en', options.smart_count)] || texts[0]);\n  }\n\n  // Interpolate: Creates a `RegExp` object for each interpolation placeholder.\n  result = replace.call(result, interpolationRegex, function (expression, argument) {\n    if (!has(options, argument) || options[argument] == null) { return expression; }\n    // Ensure replacement value is escaped to prevent special $-prefixed regex replace tokens.\n    return replace.call(options[argument], dollarRegex, dollarBillsYall);\n  });\n\n  return result;\n}\n\n// ### Polyglot class constructor\nfunction Polyglot(options) {\n  var opts = options || {};\n  this.phrases = {};\n  this.extend(opts.phrases || {});\n  this.currentLocale = opts.locale || 'en';\n  var allowMissing = opts.allowMissing ? transformPhrase : null;\n  this.onMissingKey = typeof opts.onMissingKey === 'function' ? opts.onMissingKey : allowMissing;\n  this.warn = opts.warn || warn;\n  this.tokenRegex = constructTokenRegex(opts.interpolation);\n}\n\n// ### polyglot.locale([locale])\n//\n// Get or set locale. Internally, Polyglot only uses locale for pluralization.\nPolyglot.prototype.locale = function (newLocale) {\n  if (newLocale) this.currentLocale = newLocale;\n  return this.currentLocale;\n};\n\n// ### polyglot.extend(phrases)\n//\n// Use `extend` to tell Polyglot how to translate a given key.\n//\n//     polyglot.extend({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     });\n//\n// The key can be any string.  Feel free to call `extend` multiple times;\n// it will override any phrases with the same key, but leave existing phrases\n// untouched.\n//\n// It is also possible to pass nested phrase objects, which get flattened\n// into an object with the nested keys concatenated using dot notation.\n//\n//     polyglot.extend({\n//       \"nav\": {\n//         \"hello\": \"Hello\",\n//         \"hello_name\": \"Hello, %{name}\",\n//         \"sidebar\": {\n//           \"welcome\": \"Welcome\"\n//         }\n//       }\n//     });\n//\n//     console.log(polyglot.phrases);\n//     // {\n//     //   'nav.hello': 'Hello',\n//     //   'nav.hello_name': 'Hello, %{name}',\n//     //   'nav.sidebar.welcome': 'Welcome'\n//     // }\n//\n// `extend` accepts an optional second argument, `prefix`, which can be used\n// to prefix every key in the phrases object with some string, using dot\n// notation.\n//\n//     polyglot.extend({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     }, \"nav\");\n//\n//     console.log(polyglot.phrases);\n//     // {\n//     //   'nav.hello': 'Hello',\n//     //   'nav.hello_name': 'Hello, %{name}'\n//     // }\n//\n// This feature is used internally to support nested phrase objects.\nPolyglot.prototype.extend = function (morePhrases, prefix) {\n  forEach(morePhrases, function (phrase, key) {\n    var prefixedKey = prefix ? prefix + '.' + key : key;\n    if (typeof phrase === 'object') {\n      this.extend(phrase, prefixedKey);\n    } else {\n      this.phrases[prefixedKey] = phrase;\n    }\n  }, this);\n};\n\n// ### polyglot.unset(phrases)\n// Use `unset` to selectively remove keys from a polyglot instance.\n//\n//     polyglot.unset(\"some_key\");\n//     polyglot.unset({\n//       \"hello\": \"Hello\",\n//       \"hello_name\": \"Hello, %{name}\"\n//     });\n//\n// The unset method can take either a string (for the key), or an object hash with\n// the keys that you would like to unset.\nPolyglot.prototype.unset = function (morePhrases, prefix) {\n  if (typeof morePhrases === 'string') {\n    delete this.phrases[morePhrases];\n  } else {\n    forEach(morePhrases, function (phrase, key) {\n      var prefixedKey = prefix ? prefix + '.' + key : key;\n      if (typeof phrase === 'object') {\n        this.unset(phrase, prefixedKey);\n      } else {\n        delete this.phrases[prefixedKey];\n      }\n    }, this);\n  }\n};\n\n// ### polyglot.clear()\n//\n// Clears all phrases. Useful for special cases, such as freeing\n// up memory if you have lots of phrases but no longer need to\n// perform any translation. Also used internally by `replace`.\nPolyglot.prototype.clear = function () {\n  this.phrases = {};\n};\n\n// ### polyglot.replace(phrases)\n//\n// Completely replace the existing phrases with a new set of phrases.\n// Normally, just use `extend` to add more phrases, but under certain\n// circumstances, you may want to make sure no old phrases are lying around.\nPolyglot.prototype.replace = function (newPhrases) {\n  this.clear();\n  this.extend(newPhrases);\n};\n\n\n// ### polyglot.t(key, options)\n//\n// The most-used method. Provide a key, and `t` will return the\n// phrase.\n//\n//     polyglot.t(\"hello\");\n//     => \"Hello\"\n//\n// The phrase value is provided first by a call to `polyglot.extend()` or\n// `polyglot.replace()`.\n//\n// Pass in an object as the second argument to perform interpolation.\n//\n//     polyglot.t(\"hello_name\", {name: \"Spike\"});\n//     => \"Hello, Spike\"\n//\n// If you like, you can provide a default value in case the phrase is missing.\n// Use the special option key \"_\" to specify a default.\n//\n//     polyglot.t(\"i_like_to_write_in_language\", {\n//       _: \"I like to write in %{language}.\",\n//       language: \"JavaScript\"\n//     });\n//     => \"I like to write in JavaScript.\"\n//\nPolyglot.prototype.t = function (key, options) {\n  var phrase, result;\n  var opts = options == null ? {} : options;\n  if (typeof this.phrases[key] === 'string') {\n    phrase = this.phrases[key];\n  } else if (typeof opts._ === 'string') {\n    phrase = opts._;\n  } else if (this.onMissingKey) {\n    var onMissingKey = this.onMissingKey;\n    result = onMissingKey(key, opts, this.currentLocale, this.tokenRegex);\n  } else {\n    this.warn('Missing translation for key: \"' + key + '\"');\n    result = key;\n  }\n  if (typeof phrase === 'string') {\n    result = transformPhrase(phrase, opts, this.currentLocale, this.tokenRegex);\n  }\n  return result;\n};\n\n\n// ### polyglot.has(key)\n//\n// Check if polyglot has a translation for given key\nPolyglot.prototype.has = function (key) {\n  return has(this.phrases, key);\n};\n\n// export transformPhrase\nPolyglot.transformPhrase = function transform(phrase, substitutions, locale) {\n  return transformPhrase(phrase, substitutions, locale);\n};\n\nvar webixPolyglot = Polyglot;\n\nfunction Locale(app, _view, config) {\r\n    config = config || {};\r\n    const storage = config.storage;\r\n    let lang = storage ? (storage.get(\"lang\") || \"en\") : (config.lang || \"en\");\r\n    function setLangData(name, data, silent) {\r\n        if (data.__esModule) {\r\n            data = data.default;\r\n        }\r\n        const pconfig = { phrases: data };\r\n        if (config.polyglot) {\r\n            app.webix.extend(pconfig, config.polyglot);\r\n        }\r\n        const poly = service.polyglot = new webixPolyglot(pconfig);\r\n        poly.locale(name);\r\n        service._ = app.webix.bind(poly.t, poly);\r\n        lang = name;\r\n        if (storage) {\r\n            storage.put(\"lang\", lang);\r\n        }\r\n        if (config.webix) {\r\n            const locName = config.webix[name];\r\n            if (locName) {\r\n                app.webix.i18n.setLocale(locName);\r\n            }\r\n        }\r\n        if (!silent) {\r\n            return app.refresh();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    function getLang() { return lang; }\r\n    function setLang(name, silent) {\r\n        // ignore setLang if loading by path is disabled\r\n        if (config.path === false) {\r\n            return;\r\n        }\r\n        const path = (config.path ? config.path + \"/\" : \"\") + name;\r\n        const data = app.require(\"jet-locales\", path);\r\n        setLangData(name, data, silent);\r\n    }\r\n    const service = {\r\n        getLang, setLang, setLangData, _: null, polyglot: null\r\n    };\r\n    app.setService(\"locale\", service);\r\n    setLang(lang, true);\r\n}\n\nfunction show(view, config, value) {\r\n    if (config.urls) {\r\n        value = config.urls[value] || value;\r\n    }\r\n    else if (config.param) {\r\n        value = { [config.param]: value };\r\n    }\r\n    view.show(value);\r\n}\r\nfunction Menu(app, view, config) {\r\n    const frame = view.getSubViewInfo().parent;\r\n    const ui = view.$$(config.id || config);\r\n    let silent = false;\r\n    ui.attachEvent(\"onchange\", function () {\r\n        if (!silent) {\r\n            show(frame, config, this.getValue());\r\n        }\r\n    });\r\n    ui.attachEvent(\"onafterselect\", function () {\r\n        if (!silent) {\r\n            let id = null;\r\n            if (ui.setValue) {\r\n                id = this.getValue();\r\n            }\r\n            else if (ui.getSelectedId) {\r\n                id = ui.getSelectedId();\r\n            }\r\n            show(frame, config, id);\r\n        }\r\n    });\r\n    view.on(app, `app:route`, function () {\r\n        let name = \"\";\r\n        if (config.param) {\r\n            name = view.getParam(config.param, true);\r\n        }\r\n        else {\r\n            const segment = frame.getUrl()[1];\r\n            if (segment) {\r\n                name = segment.page;\r\n            }\r\n        }\r\n        if (name) {\r\n            silent = true;\r\n            if (ui.setValue && ui.getValue() !== name) {\r\n                ui.setValue(name);\r\n            }\r\n            else if (ui.select && ui.exists(name) && ui.getSelectedId() !== name) {\r\n                ui.select(name);\r\n            }\r\n            silent = false;\r\n        }\r\n    });\r\n}\n\nconst baseicons = {\r\n    good: \"check\",\r\n    error: \"warning\",\r\n    saving: \"refresh fa-spin\"\r\n};\r\nconst basetext = {\r\n    good: \"Ok\",\r\n    error: \"Error\",\r\n    saving: \"Connecting...\"\r\n};\r\nfunction Status(app, view, config) {\r\n    let status = \"good\";\r\n    let count = 0;\r\n    let iserror = false;\r\n    let expireDelay = config.expire;\r\n    if (!expireDelay && expireDelay !== false) {\r\n        expireDelay = 2000;\r\n    }\r\n    const texts = config.texts || basetext;\r\n    const icons = config.icons || baseicons;\r\n    if (typeof config === \"string\") {\r\n        config = { target: config };\r\n    }\r\n    function refresh(content) {\r\n        const area = view.$$(config.target);\r\n        if (area) {\r\n            if (!content) {\r\n                content = \"<div class='status_\" +\r\n                    status +\r\n                    \"'><span class='webix_icon fa-\" +\r\n                    icons[status] + \"'></span> \" + texts[status] + \"</div>\";\r\n            }\r\n            area.setHTML(content);\r\n        }\r\n    }\r\n    function success() {\r\n        count--;\r\n        setStatus(\"good\");\r\n    }\r\n    function fail(err) {\r\n        count--;\r\n        setStatus(\"error\", err);\r\n    }\r\n    function start(promise) {\r\n        count++;\r\n        setStatus(\"saving\");\r\n        if (promise && promise.then) {\r\n            promise.then(success, fail);\r\n        }\r\n    }\r\n    function getStatus() {\r\n        return status;\r\n    }\r\n    function hideStatus() {\r\n        if (count === 0) {\r\n            refresh(\" \");\r\n        }\r\n    }\r\n    function setStatus(mode, err) {\r\n        if (count < 0) {\r\n            count = 0;\r\n        }\r\n        if (mode === \"saving\") {\r\n            status = \"saving\";\r\n            refresh();\r\n        }\r\n        else {\r\n            iserror = (mode === \"error\");\r\n            if (count === 0) {\r\n                status = iserror ? \"error\" : \"good\";\r\n                if (iserror) {\r\n                    app.error(\"app:error:server\", [err.responseText || err]);\r\n                }\r\n                else {\r\n                    if (expireDelay) {\r\n                        setTimeout(hideStatus, expireDelay);\r\n                    }\r\n                }\r\n                refresh();\r\n            }\r\n        }\r\n    }\r\n    function track(data) {\r\n        const dp = app.webix.dp(data);\r\n        if (dp) {\r\n            view.on(dp, \"onAfterDataSend\", start);\r\n            view.on(dp, \"onAfterSaveError\", (_id, _obj, response) => fail(response));\r\n            view.on(dp, \"onAfterSave\", success);\r\n        }\r\n    }\r\n    app.setService(\"status\", {\r\n        getStatus,\r\n        setStatus,\r\n        track\r\n    });\r\n    if (config.remote) {\r\n        view.on(app.webix, \"onRemoteCall\", start);\r\n    }\r\n    if (config.ajax) {\r\n        view.on(app.webix, \"onBeforeAjax\", (_mode, _url, _data, _request, _headers, _files, promise) => {\r\n            start(promise);\r\n        });\r\n    }\r\n    if (config.data) {\r\n        track(config.data);\r\n    }\r\n}\n\nfunction Theme(app, _view, config) {\r\n    config = config || {};\r\n    const storage = config.storage;\r\n    let theme = storage ?\r\n        (storage.get(\"theme\") || \"flat-default\")\r\n        :\r\n            (config.theme || \"flat-default\");\r\n    const service = {\r\n        getTheme() { return theme; },\r\n        setTheme(name, silent) {\r\n            const parts = name.split(\"-\");\r\n            const links = document.getElementsByTagName(\"link\");\r\n            for (let i = 0; i < links.length; i++) {\r\n                const lname = links[i].getAttribute(\"title\");\r\n                if (lname) {\r\n                    if (lname === name || lname === parts[0]) {\r\n                        links[i].disabled = false;\r\n                    }\r\n                    else {\r\n                        links[i].disabled = true;\r\n                    }\r\n                }\r\n            }\r\n            app.webix.skin.set(parts[0]);\r\n            // remove old css\r\n            app.webix.html.removeCss(document.body, \"theme-\" + theme);\r\n            // add new css\r\n            app.webix.html.addCss(document.body, \"theme-\" + name);\r\n            theme = name;\r\n            if (storage) {\r\n                storage.put(\"theme\", name);\r\n            }\r\n            if (!silent) {\r\n                app.refresh();\r\n            }\r\n        }\r\n    };\r\n    app.setService(\"theme\", service);\r\n    service.setTheme(theme, true);\r\n}\n\nfunction copyParams(data, url, route) {\r\n    for (let i = 0; i < route.length; i++) {\r\n        data[route[i]] = url[i + 1] ? url[i + 1].page : \"\";\r\n    }\r\n}\r\nfunction UrlParam(app, view, config) {\r\n    const route = config.route || config;\r\n    const data = {};\r\n    view.on(app, \"app:urlchange\", function (subview, segment) {\r\n        if (view === subview) {\r\n            copyParams(data, segment.suburl(), route);\r\n            segment.size(route.length + 1);\r\n        }\r\n    });\r\n    const os = view.setParam;\r\n    const og = view.getParam;\r\n    view.setParam = function (name, value, show) {\r\n        const index = route.indexOf(name);\r\n        if (index >= 0) {\r\n            data[name] = value;\r\n            this._segment.update(\"\", value, index + 1);\r\n            if (show) {\r\n                return view.show(null);\r\n            }\r\n        }\r\n        else {\r\n            return os.call(this, name, value, show);\r\n        }\r\n    };\r\n    view.getParam = function (key, mode) {\r\n        const val = data[key];\r\n        if (typeof val !== \"undefined\") {\r\n            return val;\r\n        }\r\n        return og.call(this, key, mode);\r\n    };\r\n    copyParams(data, view.getUrl(), route);\r\n}\n\nfunction User(app, _view, config) {\r\n    config = config || {};\r\n    const login = config.login || \"/login\";\r\n    const logout = config.logout || \"/logout\";\r\n    const afterLogin = config.afterLogin || app.config.start;\r\n    const afterLogout = config.afterLogout || \"/login\";\r\n    const ping = config.ping || 5 * 60 * 1000;\r\n    const model = config.model;\r\n    let user = config.user;\r\n    const service = {\r\n        getUser() {\r\n            return user;\r\n        },\r\n        getStatus(server) {\r\n            if (!server) {\r\n                return user !== null;\r\n            }\r\n            return model.status().catch(() => null).then(data => {\r\n                user = data;\r\n            });\r\n        },\r\n        login(name, pass) {\r\n            return model.login(name, pass).then(data => {\r\n                user = data;\r\n                if (!data) {\r\n                    throw new Error(\"Access denied\");\r\n                }\r\n                app.callEvent(\"app:user:login\", [user]);\r\n                app.show(afterLogin);\r\n            });\r\n        },\r\n        logout() {\r\n            user = null;\r\n            return model.logout().then(res => {\r\n                app.callEvent(\"app:user:logout\", []);\r\n                return res;\r\n            });\r\n        }\r\n    };\r\n    function canNavigate(url, obj) {\r\n        if (url === logout) {\r\n            service.logout();\r\n            obj.redirect = afterLogout;\r\n        }\r\n        else if (url !== login && !service.getStatus()) {\r\n            obj.redirect = login;\r\n        }\r\n    }\r\n    app.setService(\"user\", service);\r\n    app.attachEvent(`app:guard`, function (url, _$root, obj) {\r\n        if (config.public && config.public(url)) {\r\n            return true;\r\n        }\r\n        if (typeof user === \"undefined\") {\r\n            obj.confirm = service.getStatus(true).then(() => canNavigate(url, obj));\r\n        }\r\n        return canNavigate(url, obj);\r\n    });\r\n    if (ping) {\r\n        setInterval(() => service.getStatus(true), ping);\r\n    }\r\n}\n\n/*\r\nMIT License\r\nCopyright (c) 2019 XB Software\r\n*/\r\nlet webix = window.webix;\r\nif (webix) {\r\n    patch(webix);\r\n}\r\nconst plugins = {\r\n    UnloadGuard, Locale, Menu, Theme, User, Status, UrlParam\r\n};\r\nconst errors = { NavigationBlocked };\r\nconst w = window;\r\nif (!w.Promise) {\r\n    w.Promise = w.webix.promise;\r\n}\n\nexport { plugins, errors, JetApp, JetView, HashRouter, StoreRouter, UrlRouter, EmptyRouter, SubRouter };\n//# sourceMappingURL=jet.js.map\n","var index = 1;\nfunction uid() {\n\treturn index++;\n}\n\nvar empty = undefined;\n\nexport function ignoreInitial(code) {\n\tlet init = false;\n\treturn function() {\n\t\tif (init) return code.apply(this, arguments);\n\t\telse init = true;\n\t};\n}\n\nvar context = null;\nexport function withContext(value, code) {\n\tcontext = value;\n\tcode();\n\tcontext = null;\n}\n\nexport function filter(rule, handler) {\n\treturn function(v, o, obj, meta) {\n\t\tif (rule(v, meta)) handler.apply(this, arguments);\n\t};\n}\n\nexport function link(source, target, key) {\n\tObject.defineProperty(target, key, {\n\t\tget: () => source[key],\n\t\tset: value => (source[key] = value),\n\t});\n}\n\nexport function debounce(handler, delay) {\n\tdelay = delay || 200;\n\tlet timer = null;\n\tlet data = null;\n\treturn function() {\n\t\tdata = arguments;\n\t\tif (!timer) {\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t\ttimer = null;\n\n\t\t\t\thandler.apply(this, data);\n\t\t\t}, delay);\n\t\t}\n\t};\n}\n\nexport function createState(data, config) {\n\tconfig = config || {};\n\tconst handlers = {};\n\tconst out = {};\n\n\tconst observe = function(mask, handler) {\n\t\tconst key = uid();\n\t\thandlers[key] = { mask, handler };\n\t\tif (mask === \"*\") handler(out, empty, mask);\n\t\telse handler(out[mask], empty, mask);\n\n\t\treturn key;\n\t};\n\n\tconst extend = function(data, sconfig){\n\t\tsconfig = sconfig || config;\n\t\t// normal js object\n\t\tfor (const key in data) {\n\t\t\tif (data.hasOwnProperty(key)) {\n\t\t\t\tconst test = data[key];\n\t\t\t\tif (sconfig.nested && typeof test === \"object\" && test) {\n\t\t\t\t\tout[key] = createState(test, sconfig);\n\t\t\t\t} else {\n\t\t\t\t\treactive(out, test, key, notify);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst observeEnd = function(id) {\n\t\tdelete handlers[id];\n\t};\n\n\tconst queue = [];\n\tlet waitInQueue = false;\n\n\tvar batch = function(code) {\n\t\tif (typeof code !== \"function\") {\n\t\t\tconst values = code;\n\t\t\tcode = () => {\n\t\t\t\tfor (const key in values) out[key] = values[key];\n\t\t\t};\n\t\t}\n\n\t\twaitInQueue = true;\n\t\tcode(out);\n\t\twaitInQueue = false;\n\t\twhile (queue.length) {\n\t\t\tconst obj = queue.shift();\n\t\t\tnotify.apply(this, obj);\n\t\t}\n\t};\n\n\tconst notify = function(key, old, value, meta) {\n\t\tif (waitInQueue) {\n\t\t\tqueue.push([key, old, value, meta]);\n\t\t\treturn;\n\t\t}\n\n\t\tconst list = Object.keys(handlers);\n\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\tconst obj = handlers[list[i]];\n\t\t\tif (!obj) continue;\n\t\t\tif (obj.mask === \"*\" || obj.mask === key) {\n\t\t\t\tobj.handler(value, old, key, meta);\n\t\t\t}\n\t\t}\n\t};\n\n\tObject.defineProperty(out, \"$changes\", {\n\t\tvalue: {\n\t\t\tattachEvent: observe,\n\t\t\tdetachEvent: observeEnd,\n\t\t},\n\t\tenumerable: false,\n\t\tconfigurable: false,\n\t});\n\tObject.defineProperty(out, \"$observe\", {\n\t\tvalue: observe,\n\t\tenumerable: false,\n\t\tconfigurable: false,\n\t});\n\tObject.defineProperty(out, \"$batch\", {\n\t\tvalue: batch,\n\t\tenumerable: false,\n\t\tconfigurable: false,\n\t});\n\tObject.defineProperty(out, \"$extend\", {\n\t\tvalue: extend,\n\t\tenumerable: false,\n\t\tconfigurable: false,\n\t});\n\n\tout.$extend(data, config);\n\treturn out;\n}\n\nfunction reactive(obj, val, key, notify) {\n\tObject.defineProperty(obj, key, {\n\t\tget: function() {\n\t\t\treturn val;\n\t\t},\n\t\tset: function(value) {\n\t\t\tvar changed = false;\n\t\t\tif (val === null || value === null) {\n\t\t\t\tchanged = val !== value;\n\t\t\t} else {\n\t\t\t\tchanged = val.valueOf() != value.valueOf();\n\t\t\t}\n\n\t\t\tif (changed) {\n\t\t\t\tvar old = val;\n\t\t\t\tval = value;\n\t\t\t\tnotify(key, old, value, context);\n\t\t\t}\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t});\n}","import { JetView } from \"webix-jet\";\n\nexport default class ChartView extends JetView {\n\tconfig() {\n\t\tconst state = (this.State = this.getParam(\"state\", true));\n\n\t\tconst chart = {\n\t\t\tview: \"chart\",\n\t\t\t$mainView: true,\n\t\t\tborderless: true,\n\t\t\tlocalId: \"data\",\n\t\t\txAxis: {},\n\t\t\tyAxis: {},\n\t\t};\n\n\t\twebix.extend(chart, state.chart, true);\n\n\t\tif (!chart.xAxis.template)\n\t\t\tchart.xAxis.template = obj => obj[obj.length - 1];\n\n\t\tconst commonAxisSettings = {\n\t\t\tlines: state.chart.lines,\n\t\t};\n\n\t\t//save default chart line color\n\t\tif (state.chart.scaleColor)\n\t\t\tcommonAxisSettings.color = commonAxisSettings.lineColor =\n\t\t\t\tstate.chart.scaleColor;\n\n\t\twebix.extend(chart.xAxis, commonAxisSettings, true);\n\t\twebix.extend(chart.yAxis, commonAxisSettings, true);\n\n\t\treturn chart;\n\t}\n\n\tinit() {\n\t\tthis.Local = this.app.getService(\"local\");\n\t\tthis.LoadData();\n\n\t\tthis.on(this.State.$changes, \"structure\", (structure, old) => {\n\t\t\tif (old) this.UpdateStructure();\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"chart\", (val, o) => {\n\t\t\tif (o) this.refresh();\n\t\t});\n\t}\n\t/**\n\t * Loads data to a chart\n\t * @returns {Promise} promise that resolves when data is parsed\n\t */\n\tLoadData() {\n\t\treturn this.Local.getData().then(data => {\n\t\t\tthis.UpdateChart(data);\n\t\t});\n\t}\n\t/**\n\t * Updates chart during structure changes\n\t */\n\tUpdateStructure() {\n\t\tconst data = this.Local.getPivotData();\n\t\tthis.UpdateChart(data);\n\t}\n\t/**\n\t * Updates chart data\n\t * @param {Array} data - array of data\n\t */\n\tUpdateChart(data) {\n\t\tthis.$$(\"data\").clearAll();\n\t\tthis.$$(\"data\").removeAllSeries();\n\t\tthis.SetSeries(data.values);\n\t\tthis.$$(\"data\").parse(data.data);\n\t}\n\t/**\n\t * Prepares and sets chart series\n\t * @param {Array} values - array of values for series\n\t */\n\tSetSeries(values) {\n\t\tconst type = this.State.chart.type;\n\n\t\tconst _ = this.app.getService(\"locale\")._;\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tthis.$$(\"data\").addSeries({\n\t\t\t\tvalue: obj => obj[i],\n\t\t\t\talpha: type == \"area\" || type == \"splineArea\" ? 0.7 : 1,\n\t\t\t\tcolor: values[i].color,\n\t\t\t\ttooltip: obj => obj[i],\n\t\t\t\titem: {\n\t\t\t\t\tcolor: values[i].color,\n\t\t\t\t\tborderColor: values[i].color,\n\t\t\t\t},\n\t\t\t\tline: {\n\t\t\t\t\tcolor: values[i].color,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (values[i].text != values[i].operation) {\n\t\t\t\tlet text = values[i].text.split(\",\");\n\t\t\t\ttext = text.map(t => this.Local.getField(t).value).join(\", \");\n\t\t\t\tvalues[i].text = `${text} (${_(values[i].operation)})`;\n\t\t\t} //complex operation\n\t\t\telse values[i].text = this.Local.fixMath(values[i].operation);\n\t\t}\n\n\t\tthis.SetLegend(values);\n\t}\n\t/**\n\t * Prepares and sets chart legend\n\t * @param {Array} values - array of values for legend\n\t */\n\tSetLegend(values) {\n\t\tconst legend = webix.extend(\n\t\t\t{\n\t\t\t\tvalues,\n\t\t\t\tvalign: \"middle\",\n\t\t\t\talign: \"right\",\n\t\t\t\tlayout: \"y\",\n\t\t\t},\n\t\t\tthis.State.chart.legend || {},\n\t\t\ttrue\n\t\t);\n\t\tthis.$$(\"data\").define({ legend });\n\t}\n}\n","webix.protoUI(\n\t{\n\t\tname: \"pivot-portlet\",\n\t\t$reorderOnly: true,\n\t\t$drag: function(object) {\n\t\t\twebix.html.addCss(this.$view, \"portlet_in_drag\");\n\t\t\tconst ctx = webix.DragControl.getContext();\n\t\t\tctx.source = ctx.from = object;\n\n\t\t\t// hide suggests\n\t\t\twebix.callEvent(\"onClick\", []);\n\n\t\t\tconst local = this.$scope.app.getService(\"local\");\n\t\t\tconst values = this.getChildViews()[0].getValues();\n\n\t\t\tlet text = values.name ? local.getField(values.name).value : \"\";\n\t\t\tif (values.name2)\n\t\t\t\ttext += (text ? \", \" : \"\") + local.getField(values.name2).value;\n\n\t\t\t// complex operation\n\t\t\tif (webix.isUndefined(values.name) && values.operation) {\n\t\t\t\ttext = local.fixMath(values.operation);\n\t\t\t} else if (!text) {\n\t\t\t\tconst _ = this.$scope.app.getService(\"locale\")._;\n\t\t\t\ttext = _(\"Field not defined\");\n\t\t\t} else if (values.operation) text += ` (${values.operation})`;\n\n\t\t\tconst askin = webix.skin.$active;\n\t\t\tconst style = `width:${this.$width - askin.inputHeight}px;height:${\n\t\t\t\tthis.$height\n\t\t\t}px;`;\n\t\t\treturn `<div class=\"webix_pivot_portlet_drag\" style=\"${style}\">\n\t\t\t\t<span class=\"webix_icon ${this.config.icon}\"></span>${text}\n\t\t\t</div>`;\n\t\t},\n\t},\n\twebix.ui.portlet\n);\n","import { JetView } from \"webix-jet\";\n\nimport \"helpers/portlet\";\n\nexport default class Property extends JetView {\n\tconstructor(app, name, config) {\n\t\tsuper(app, name);\n\n\t\tif (!config) config = {};\n\n\t\tthis.plusLabel = config.plusLabel;\n\t\tthis.field = config.field;\n\t}\n\tconfig() {\n\t\tconst askin = webix.skin.$active;\n\t\treturn {\n\t\t\tborderless: true,\n\t\t\ttype: \"clean\",\n\t\t\tpaddingY: 8,\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tlocalId: \"forms\",\n\t\t\t\t\ttype: \"clean\",\n\t\t\t\t\trows: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttemplate: `<div class=\"webix_pivot_handle_add_value\">\n\t\t\t\t\t\t<span class=\"webix_icon wxi-plus-circle\"></span><span>${this.plusLabel}</span>\n\t\t\t\t\t</div>`,\n\t\t\t\t\tcss: \"webix_pivot_add_value\",\n\t\t\t\t\theight: askin.inputHeight - 2 * askin.inputPadding,\n\t\t\t\t\tlocalId: \"addValue\",\n\t\t\t\t\tonClick: {\n\t\t\t\t\t\twebix_pivot_handle_add_value: () => {\n\t\t\t\t\t\t\tconst forms = this.$$(\"forms\").getChildViews();\n\n\t\t\t\t\t\t\tconst added = this.Add(null, forms.length);\n\n\t\t\t\t\t\t\tconst input = webix.$$(added).queryView({ name: \"name\" });\n\t\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\t\tinput.focus();\n\t\t\t\t\t\t\t\twebix.html.triggerEvent(\n\t\t\t\t\t\t\t\t\tinput.getInputNode(),\n\t\t\t\t\t\t\t\t\t\"MouseEvents\",\n\t\t\t\t\t\t\t\t\t\"click\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.field != \"values\" &&\n\t\t\t\t\t\t\t\tforms.length == this.app.getState().fields.length\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tthis.$$(\"addValue\").hide();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\tinit() {\n\t\tthis.on(webix, \"onAfterPortletMove\", source => {\n\t\t\tif (source == this.$$(\"forms\"))\n\t\t\t\tthis.app.callEvent(\"property:change\", [this.field, this.GetValue()]);\n\t\t});\n\t\tthis.on(webix, \"onPortletDrag\", function(active, target) {\n\t\t\tif (active.$reorderOnly)\n\t\t\t\treturn active.getParentView() === target.getParentView();\n\t\t});\n\t}\n\tListTemplate(obj) {\n\t\tconst input = this._activeInput;\n\n\t\t//wavg - complex operation, no need to correct inputs\n\t\tconst wavg =\n\t\t\tthis.field == \"values\" &&\n\t\t\tinput &&\n\t\t\t!input.$destructed && // CorrectInputs calls SetValue, which recreates inputs\n\t\t\tinput.getFormView().elements.operation.getValue() == \"wavg\";\n\n\t\tconst corrections = this.getParentView().GetCorrections()[this.field];\n\t\tconst value = obj.value;\n\n\t\tif (!wavg && corrections) {\n\t\t\tconst includes = this.CheckCorrections(corrections, obj.id);\n\n\t\t\tlet css = \"webix_pivot_list_marker\";\n\t\t\tif (includes) css += \" webix_pivot_list_marker_fill\";\n\n\t\t\treturn `<div class=\"${css}\"> ${value}</div>`;\n\t\t} else return value;\n\t}\n\tCheckCorrections(corrections, id) {\n\t\tif (this._activeInput && id == this._activeInput.getValue()) return true;\n\n\t\tconst structure = this.app.getStructure();\n\n\t\tfor (let i = 0; i < corrections.length; i++) {\n\t\t\tconst name = corrections[i];\n\t\t\tconst val = structure[name];\n\n\t\t\tif (val) {\n\t\t\t\tif (typeof val == \"string\") {\n\t\t\t\t\tif (val == id) return true;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let j = 0; j < val.length; j++) {\n\t\t\t\t\t\tlet value = val[j];\n\t\t\t\t\t\tif (value.name) value = value.name;\n\n\t\t\t\t\t\tif (value == id) return true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tGetValue() {\n\t\tconst forms = this.$$(\"forms\").getChildViews();\n\t\tlet arr = [];\n\n\t\tforms.forEach(form => {\n\t\t\tconst val = form.getChildViews()[0].getValues().name;\n\n\t\t\tif (val) arr.push(val);\n\t\t});\n\n\t\treturn arr;\n\t}\n\tSetValue(val) {\n\t\tconst layout = this.$$(\"forms\");\n\t\tconst forms = layout.getChildViews();\n\n\t\tfor (let i = forms.length - 1; i >= 0; i--) layout.removeView(forms[i]);\n\t\tfor (let i = 0; i < val.length; i++) {\n\t\t\tif (!val[i].external) this.Add(val[i], i);\n\t\t}\n\t}\n\tAdd(val, i) {\n\t\treturn this.$$(\"forms\").addView({\n\t\t\tview: \"pivot-portlet\",\n\t\t\tmode: \"replace\",\n\t\t\tborderless: true,\n\t\t\tbody: {\n\t\t\t\tview: \"form\",\n\t\t\t\tpaddingY: 0,\n\t\t\t\tpaddingX: 2,\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmargin: 2,\n\t\t\t\t\t\tcols: this.ItemConfig(val, i),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ton: {\n\t\t\t\t\tonChange: () => {\n\t\t\t\t\t\tthis.app.callEvent(\"property:change\", [\n\t\t\t\t\t\t\tthis.field,\n\t\t\t\t\t\t\tthis.GetValue(),\n\t\t\t\t\t\t]);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\tItemConfig(val) {\n\t\treturn [\n\t\t\t{ width: webix.skin.$active.inputHeight }, //for portlet icon\n\t\t\t{\n\t\t\t\tview: \"richselect\",\n\t\t\t\tname: \"name\",\n\t\t\t\tvalue: this.PrepareValue(val),\n\t\t\t\toptions: {\n\t\t\t\t\tcss: \"webix_pivot_suggest\",\n\t\t\t\t\tdata: this.app.getState().fields,\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonBeforeShow: function() {\n\t\t\t\t\t\t\tconst input = webix.$$(this.config.master);\n\t\t\t\t\t\t\tconst master = input.$scope;\n\n\t\t\t\t\t\t\tconst data = master.GetValue();\n\t\t\t\t\t\t\tmaster._activeInput = input;\n\n\t\t\t\t\t\t\tthis.getList().filter(val =>\n\t\t\t\t\t\t\t\tmaster.FilterSuggest(data, input.getValue(), val)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tbody: {\n\t\t\t\t\t\ttemplate: obj => this.ListTemplate(obj),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tview: \"icon\",\n\t\t\t\ticon: \"wxi-close\",\n\t\t\t\tcss: \"webix_pivot_close_icon\",\n\t\t\t\tclick: function() {\n\t\t\t\t\tconst master = this.$scope;\n\t\t\t\t\tmaster.$$(\"addValue\").show();\n\t\t\t\t\tmaster\n\t\t\t\t\t\t.$$(\"forms\")\n\t\t\t\t\t\t.removeView(this.queryView(\"pivot-portlet\", \"parent\"));\n\t\t\t\t\tmaster.app.callEvent(\"property:change\", [\n\t\t\t\t\t\tmaster.field,\n\t\t\t\t\t\tmaster.GetValue(),\n\t\t\t\t\t]);\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\tPrepareValue(val) {\n\t\tif (val) {\n\t\t\tif (typeof val == \"object\") val = val.name;\n\t\t\tif (webix.isArray(val)) val = val[0];\n\t\t} else val = \"\";\n\n\t\treturn val;\n\t}\n\tFilterSuggest(data, activeVal, val) {\n\t\tval = val.id;\n\n\t\tif (val == activeVal) return true;\n\n\t\treturn !data.find(item => {\n\t\t\tif (item.name) item = item.name;\n\n\t\t\treturn val == item;\n\t\t});\n\t}\n}\n","import Property from \"views/config/properties\";\n\nexport default class ValuesProperty extends Property {\n\tconstructor(app, name, config) {\n\t\tsuper(app, name, config);\n\t\tthis.Local = this.app.getService(\"local\");\n\n\t\tconst _ = this.app.getService(\"locale\")._;\n\n\t\tthis.typeName = \"operation\";\n\t\tthis.plusLabel = _(\"Add value\");\n\t\tthis.field = \"values\";\n\n\t\tthis.operations = this.Local.operations;\n\n\t\tthis.operations.map(operation => {\n\t\t\toperation.value = _(operation.id);\n\t\t\treturn operation;\n\t\t});\n\t}\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis.State = this.app.getState();\n\n\t\tthis.on(this.State.$changes, \"mode\", mode => {\n\t\t\tthis.ToggleColors(mode == \"chart\");\n\t\t});\n\t}\n\tGetValue() {\n\t\tconst forms = this.$$(\"forms\").getChildViews();\n\t\tconst arr = [];\n\n\t\tforms.forEach(form => {\n\t\t\tconst values = form.getChildViews()[0].getValues({ hidden: false });\n\t\t\tif (!webix.isUndefined(values.name2)) {\n\t\t\t\t//wavg\n\t\t\t\tif (values.name && values.name2) {\n\t\t\t\t\tvalues.name = [values.name, values.name2];\n\t\t\t\t\tdelete values.name2;\n\t\t\t\t} else values.name = \"\";\n\t\t\t}\n\t\t\t// line must always contain the field, except complex math\n\t\t\tif (values.name == \"\") return;\n\t\t\tarr.push(values);\n\t\t});\n\n\t\treturn arr;\n\t}\n\tItemConfig(val, i) {\n\t\tconst config = super.ItemConfig(val);\n\n\t\tif (val && !val.name) {\n\t\t\t//custom math\n\t\t\tconfig.splice(1, 1, {\n\t\t\t\tview: \"label\",\n\t\t\t\tcss: \"webix_pivot_complex_operation\",\n\t\t\t\tname: \"operation\",\n\t\t\t\tlabel: this.Local.fixMath(val.operation),\n\t\t\t\tvalue: val.operation,\n\t\t\t});\n\t\t} else {\n\t\t\tlet operation;\n\t\t\tif (val) operation = val.operation;\n\t\t\telse {\n\t\t\t\tconst def = this.app.config.defaultOperation;\n\t\t\t\tconst defIndex = Math.max(\n\t\t\t\t\tthis.operations.findIndex(a => a.id == def),\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\toperation = this.operations[defIndex].id;\n\t\t\t}\n\n\t\t\tconfig.splice(2, 0, {\n\t\t\t\tview: \"richselect\",\n\t\t\t\tname: \"operation\",\n\t\t\t\twidth: 100,\n\t\t\t\tvalue: operation,\n\t\t\t\toptions: {\n\t\t\t\t\tcss: \"webix_pivot_suggest\",\n\t\t\t\t\tdata: this.operations,\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tonChange: function(v) {\n\t\t\t\t\t\tthis.$scope.SetOperation(v, this);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconfig.splice(2, 0, {\n\t\t\t\tview: \"richselect\",\n\t\t\t\thidden: !val || val.operation != \"wavg\",\n\t\t\t\tvalue: val && webix.isArray(val.name) ? val.name[1] : \"\",\n\t\t\t\tname: \"name2\",\n\t\t\t\toptions: {\n\t\t\t\t\tcss: \"webix_pivot_suggest\",\n\t\t\t\t\tdata: this.app.getState().fields,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tconst mini = webix.skin.$name == \"mini\" || webix.skin.$name == \"compact\";\n\t\tconst palette = this.Local.getPalette();\n\t\tconst color = (val && val.color) || this.Local.getValueColor(i);\n\n\t\tconfig.splice(1, 0, {\n\t\t\tview: \"colorpicker\",\n\t\t\thidden: this.State.mode != \"chart\",\n\t\t\tname: \"color\",\n\t\t\tcss: \"webix_pivot_value_color\",\n\t\t\tvalue: color,\n\t\t\twidth: mini ? 30 : 38,\n\t\t\tsuggest: {\n\t\t\t\ttype: \"colorboard\",\n\t\t\t\tbody: {\n\t\t\t\t\twidth: 150,\n\t\t\t\t\theight: 150,\n\t\t\t\t\tview: \"colorboard\",\n\t\t\t\t\tpalette,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\treturn config;\n\t}\n\tToggleColors(show) {\n\t\tconst layout = this.$$(\"forms\");\n\t\tconst forms = layout.getChildViews();\n\n\t\tfor (let i = 0; i < forms.length; i++) {\n\t\t\tconst input = forms[i].getChildViews()[0].elements.color;\n\t\t\tif (show) input.show();\n\t\t\telse input.hide();\n\t\t}\n\t}\n\tFilterSuggest() {\n\t\treturn true;\n\t}\n\tSetOperation(val, view) {\n\t\tconst form = view.getFormView();\n\t\tif (val == \"wavg\") form.elements.name2.show();\n\t\telse form.elements.name2.hide();\n\t}\n}\n","import Property from \"views/config/properties\";\n\nexport default class GroupProperty extends Property {\n\tconstructor(app, name) {\n\t\tsuper(app, name);\n\n\t\tthis.field = \"groupBy\";\n\t}\n\tconfig() {\n\t\treturn {\n\t\t\tpadding: 10,\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tview: \"richselect\",\n\t\t\t\t\tlocalId: \"group\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcss: \"webix_pivot_suggest\",\n\t\t\t\t\t\tdata: this.app.getState().fields,\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\ttemplate: obj => this.ListTemplate(obj),\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\tonBeforeShow: () => {\n\t\t\t\t\t\t\t\tthis._activeInput = this.$$(\"group\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: (value, oldValue, source) => {\n\t\t\t\t\t\t\tif (source == \"user\")\n\t\t\t\t\t\t\t\tthis.app.callEvent(\"property:change\", [this.field, value]);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\tGetValue() {\n\t\treturn this.$$(\"group\").getValue();\n\t}\n\tSetValue(val) {\n\t\tthis.$$(\"group\").setValue(val);\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class ChartSettings extends JetView {\n\tconfig() {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\t\treturn {\n\t\t\tview: \"form\",\n\t\t\tcomplexData: true,\n\t\t\tpadding: 10,\n\t\t\telements: [\n\t\t\t\t{\n\t\t\t\t\tname: \"type\",\n\t\t\t\t\tview: \"richselect\",\n\t\t\t\t\tvalue: \"bar\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcss: \"webix_pivot_suggest\",\n\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t{ id: \"bar\", value: _(\"Bar\") },\n\t\t\t\t\t\t\t{ id: \"line\", value: _(\"Line\") },\n\t\t\t\t\t\t\t{ id: \"radar\", value: _(\"Radar\") },\n\t\t\t\t\t\t\t{ id: \"area\", value: _(\"Area\") },\n\t\t\t\t\t\t\t{ id: \"spline\", value: _(\"Spline\") },\n\t\t\t\t\t\t\t{ id: \"splineArea\", value: _(\"Spline Area\") },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"xAxis.title\",\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tlabel: _(\"X axis title\"),\n\t\t\t\t\tbatch: \"axis\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"yAxis.title\",\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tlabel: _(\"Y axis title\"),\n\t\t\t\t\tbatch: \"axis\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"scaleColor\",\n\t\t\t\t\tview: \"colorpicker\",\n\t\t\t\t\teditable: true,\n\t\t\t\t\tlabel: _(\"Scale color\"),\n\t\t\t\t\tsuggest: {\n\t\t\t\t\t\ttype: \"colorboard\",\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\twidth: 150,\n\t\t\t\t\t\t\theight: 150,\n\t\t\t\t\t\t\tview: \"colorboard\",\n\t\t\t\t\t\t\tpalette: this.app.getService(\"local\").getPalette(),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"scale\",\n\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\tcheckValue: \"logarithmic\",\n\t\t\t\t\tuncheckValue: \"linear\",\n\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\tlabelRight: _(\"Logarithmic scale\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"yAxis.lineShape\",\n\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\tbatch: \"radar\",\n\t\t\t\t\tcheckValue: \"arc\",\n\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\tlabelRight: _(\"Circled lines\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"lines\",\n\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\tlabelRight: _(\"Lines\"),\n\t\t\t\t},\n\t\t\t],\n\t\t\ton: {\n\t\t\t\tonChange: (value, oldValue, source) => {\n\t\t\t\t\tif (source == \"user\") {\n\t\t\t\t\t\tthis.innerChange = true;\n\t\t\t\t\t\tthis.State.chart = Object.assign({}, this.getRoot().getValues());\n\t\t\t\t\t\tthis.handleVisibility();\n\t\t\t\t\t\tdelete this.innerChange;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\tinit() {\n\t\tthis.State = this.getParam(\"state\", true);\n\n\t\tthis.on(this.State.$changes, \"chart\", chart => {\n\t\t\tif (!this.innerChange) {\n\t\t\t\tthis.getRoot().setValues(chart);\n\t\t\t\tthis.handleVisibility();\n\t\t\t}\n\t\t});\n\t}\n\thandleVisibility() {\n\t\tconst form = this.getRoot();\n\n\t\tif (this.State.chart.type == \"radar\") form.showBatch(\"radar\");\n\t\telse form.showBatch(\"axis\");\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class TableSettings extends JetView {\n\tconfig() {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\n\t\treturn {\n\t\t\tview: \"form\",\n\t\t\tpadding: 10,\n\t\t\telements: [\n\t\t\t\t{\n\t\t\t\t\tname: \"cleanRows\",\n\t\t\t\t\tlocalId: \"cleanRows\",\n\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\tlabelRight: _(\"Clean rows\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\theight: 20,\n\t\t\t\t\tlabel: _(\"Highlight\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"minX\",\n\t\t\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\t\t\tlabelRight: _(\"Min X\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"maxX\",\n\t\t\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\t\t\tlabelRight: _(\"Max X\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"minY\",\n\t\t\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\t\t\tlabelRight: _(\"Min Y\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"maxY\",\n\t\t\t\t\t\t\tview: \"checkbox\",\n\t\t\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\t\t\tlabelRight: _(\"Max Y\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\theight: 20,\n\t\t\t\t\tlabel: _(\"Footer\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"radio\",\n\t\t\t\t\tname: \"footer\",\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ id: 1, value: _(\"Off\") },\n\t\t\t\t\t\t{ id: 2, value: _(\"On\") },\n\t\t\t\t\t\t{ id: 3, value: _(\"Sum Only\") },\n\t\t\t\t\t],\n\t\t\t\t\tvalue: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\ton: {\n\t\t\t\tonChange: (value, oldValue, source) => {\n\t\t\t\t\tif (source == \"user\") {\n\t\t\t\t\t\tconst out = this.OutValues(this.getRoot().getValues());\n\n\t\t\t\t\t\tthis.innerChange = true;\n\t\t\t\t\t\tthis.State.datatable = Object.assign({}, out);\n\t\t\t\t\t\tdelete this.innerChange;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\tinit() {\n\t\tthis.State = this.getParam(\"state\", true);\n\n\t\tthis.on(this.State.$changes, \"datatable\", datatable => {\n\t\t\tif (!this.innerChange) this.getRoot().setValues(this.InValues(datatable));\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"mode\", mode => {\n\t\t\tif (mode == \"table\") this.$$(\"cleanRows\").show();\n\t\t\telse this.$$(\"cleanRows\").hide();\n\t\t});\n\t}\n\tInValues(values) {\n\t\tvalues = webix.copy(values);\n\n\t\tif (values.footer) values.footer = values.footer == \"sumOnly\" ? 3 : 2;\n\t\telse values.footer = 1;\n\n\t\treturn values;\n\t}\n\tOutValues(values) {\n\t\tswitch (values.footer) {\n\t\t\tcase \"1\":\n\t\t\t\tdelete values.footer;\n\t\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\tvalues.footer = true;\n\t\t\t\tbreak;\n\t\t\tcase \"3\":\n\t\t\t\tvalues.footer = \"sumOnly\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn values;\n\t}\n}\n","import { JetView } from \"webix-jet\";\nimport Property from \"views/config/properties\";\nimport ValuesProperty from \"views/config/properties/values\";\nimport GroupProperty from \"views/config/properties/group\";\nimport ChartSettings from \"views/config/properties/chart\";\nimport TableSettings from \"views/config/properties/table\";\n\nexport default class ConfigView extends JetView {\n\tconfig() {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\n\t\tthis.Config = this.app.config;\n\t\tthis.State = this.app.getState();\n\t\tthis.Compact = this.getParam(\"compact\", true);\n\n\t\tconst toolbar = {\n\t\t\ttype: \"form\",\n\t\t\tborderless: true,\n\t\t\tpadding: {\n\t\t\t\tleft: 16,\n\t\t\t\tright: 14, //button\n\t\t\t\ttop: 8,\n\t\t\t\tbottom: 4,\n\t\t\t},\n\t\t\tcols: [\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tlabel: _(\"Done\"),\n\t\t\t\t\thotkey: \"esc\",\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tcss: \"webix_primary\",\n\t\t\t\t\tclick: () => this.ToggleForm(),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst structure = {\n\t\t\tborderless: true,\n\t\t\tview: \"scrollview\",\n\t\t\tscroll: \"y\",\n\t\t\tbody: {\n\t\t\t\tview: \"accordion\",\n\t\t\t\tcss: \"webix_pivot_configuration\",\n\t\t\t\tlocalId: \"settings\",\n\t\t\t\tmulti: true,\n\t\t\t\ttype: \"space\",\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 16,\n\t\t\t\t\tright: 16,\n\t\t\t\t\ttop: 4,\n\t\t\t\t\tbottom: 16,\n\t\t\t\t},\n\t\t\t\tmargin: 20,\n\t\t\t\trows: [\n\t\t\t\t\tthis.GroupConfig(\n\t\t\t\t\t\t_(\"Rows\"),\n\t\t\t\t\t\t\"pt-rows\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"rows\",\n\t\t\t\t\t\t\t$subview: new Property(this.app, \"\", {\n\t\t\t\t\t\t\t\tfield: \"rows\",\n\t\t\t\t\t\t\t\tplusLabel: _(\"Add row\"),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t),\n\t\t\t\t\tthis.GroupConfig(\n\t\t\t\t\t\t_(\"Columns\"),\n\t\t\t\t\t\t\"pt-columns\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"columns\",\n\t\t\t\t\t\t\t$subview: new Property(this.app, \"\", {\n\t\t\t\t\t\t\t\tfield: \"columns\",\n\t\t\t\t\t\t\t\tplusLabel: _(\"Add column\"),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t),\n\t\t\t\t\tthis.GroupConfig(_(\"Values\"), \"pt-values\", {\n\t\t\t\t\t\tname: \"values\",\n\t\t\t\t\t\t$subview: ValuesProperty,\n\t\t\t\t\t}),\n\t\t\t\t\tthis.GroupConfig(\n\t\t\t\t\t\t_(\"Group By\"),\n\t\t\t\t\t\t\"pt-group\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"groupBy\",\n\t\t\t\t\t\t\t$subview: GroupProperty,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"chart\"\n\t\t\t\t\t),\n\t\t\t\t\tthis.GroupConfig(_(\"Filters\"), \"pt-filter\", {\n\t\t\t\t\t\tname: \"filters\",\n\t\t\t\t\t\t$subview: new Property(this.app, \"\", {\n\t\t\t\t\t\t\tfield: \"filters\",\n\t\t\t\t\t\t\tplusLabel: _(\"Add filter\"),\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t\tthis.GroupConfig(\n\t\t\t\t\t\t_(\"Chart\"),\n\t\t\t\t\t\t\"pt-chart\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$subview: ChartSettings,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"chart\"\n\t\t\t\t\t),\n\t\t\t\t\tthis.GroupConfig(\n\t\t\t\t\t\t_(\"Table\"),\n\t\t\t\t\t\t\"wxi-columns\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$subview: TableSettings,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t),\n\t\t\t\t\t{},\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\n\t\treturn {\n\t\t\tmargin: 0,\n\t\t\trows: [toolbar, structure],\n\t\t};\n\t}\n\n\tinit() {\n\t\tthis.on(this.State.$changes, \"readonly\", (_v, o) => {\n\t\t\tif (!webix.isUndefined(o)) this.ToggleForm();\n\t\t});\n\t}\n\n\tready() {\n\t\tthis.on(this.app, \"property:change\", (field, value) => {\n\t\t\tthis.HandleFieldChange(field, value);\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"structure\", () => {\n\t\t\tif (!this.innerChange) this.SetValues();\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"mode\", (mode, oldMode) => {\n\t\t\tconst isChart = mode == \"chart\";\n\n\t\t\tthis.$$(\"settings\").showBatch(isChart ? \"chart\" : \"table\");\n\n\t\t\t//columns can be updated in structure via groupBy\n\t\t\tif (oldMode && (isChart || oldMode == \"chart\")) this.SetValues();\n\t\t});\n\t}\n\t/** Toggles configuration form */\n\tToggleForm() {\n\t\tthis.State.config = !this.State.config;\n\t}\n\t/** Sets values into a  configuration form */\n\tSetValues() {\n\t\tconst structure = this.State.structure;\n\t\tconst inputs = [\"rows\", \"columns\", \"values\", \"filters\", \"groupBy\"];\n\n\t\tinputs.forEach(input => {\n\t\t\tconst value = structure[input] || this.State[input];\n\t\t\tif (value) {\n\t\t\t\tconst view = this.getSubView(input);\n\t\t\t\tview.SetValue(value);\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t * Applies changes in form fields to data structure\n\t * @param {string} field - field name\n\t * @param {string|Array} value - field value\n\t */\n\tHandleFieldChange(field, value) {\n\t\tconst structure = webix.copy(this.State.structure);\n\n\t\tif (field == \"filters\") value = this.CorrectFilters(structure, value);\n\t\telse this.CorrectInputs(structure, field, value);\n\n\t\tstructure[field] = value;\n\t\tthis.innerChange = true;\n\t\tthis.app.setStructure(structure);\n\t\tdelete this.innerChange;\n\t}\n\t/**\n\t * Prepares configuration for an accordion item with form fields\n\t * @param {string} name - accordion item header name\n\t * @param {string} icon - accordion item icon\n\t * @param {Object} config - object with form fields for this accordion item\n\t * @param {string} batch - batch name, used to control visibility\n\t * @returns {Object} configuration of the accordion item body\n\t */\n\tGroupConfig(name, icon, config, batch) {\n\t\treturn {\n\t\t\tbatch,\n\t\t\theader: `\n\t\t\t\t<span class=\"webix_icon webix_pivot_config_icon ${icon}\"></span>\n\t\t\t\t<span class=\"webix_pivot_config_label\">${name}</span>\n\t\t\t`,\n\t\t\tbody: config,\n\t\t\tborderless: true,\n\t\t};\n\t}\n\t/** Returns an object with fields that need to be corrected when some field changes */\n\tGetCorrections() {\n\t\treturn {\n\t\t\trows: [\"columns\", \"values\", \"groupBy\"],\n\t\t\tcolumns: [\"rows\", \"values\"],\n\t\t\tvalues: [\"rows\", \"columns\", \"groupBy\"],\n\t\t\tgroupBy: [\"rows\", \"values\"],\n\t\t};\n\t}\n\t/**\n\t * Prepares filters before applying them to data structure\n\t * @param {Object} structure - a copy of the current data structure\n\t * @param {Array} value - \"filters\" field value\n\t */\n\tCorrectFilters(structure, value) {\n\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\tconst active = structure.filters.find(filter => {\n\t\t\t\tif (filter.name == value[i]) return true;\n\t\t\t});\n\t\t\tvalue[i] = { name: value[i] };\n\t\t\tif (active && !active.external) value[i].value = active.value;\n\t\t}\n\n\t\tconst external = structure.filters.filter(filter => filter.external);\n\t\tvalue = value.concat(external);\n\n\t\treturn value;\n\t}\n\t/**\n\t * Prepares form fields before applying them to data structure\n\t * @param {Object} structure - a copy of the current data structure\n\t * @param {string} field -  field name\n\t * @param {string|Array} value -  field value\n\t */\n\tCorrectInputs(structure, field, value) {\n\t\tconst inputs = this.GetCorrections()[field];\n\n\t\tif (inputs) {\n\t\t\tif (typeof value == \"string\") value = [value];\n\n\t\t\tvalue = value.map(v => (v.name ? v.name : v));\n\n\t\t\tinputs.forEach(input => {\n\t\t\t\tconst view = this.getSubView(input);\n\t\t\t\tlet values = view.GetValue();\n\n\t\t\t\tif (typeof values == \"string\") {\n\t\t\t\t\tif (value.find(v => v == values)) values = \"\";\n\t\t\t\t} else\n\t\t\t\t\tvalues = values.filter(v => {\n\t\t\t\t\t\tif (v.name) v = v.name;\n\n\t\t\t\t\t\treturn value.indexOf(v) == -1;\n\t\t\t\t\t});\n\n\t\t\t\tstructure[input] = values;\n\t\t\t\tview.SetValue(values);\n\t\t\t});\n\t\t}\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class Popup extends JetView {\n\tconfig() {\n\t\treturn {\n\t\t\tview: \"window\",\n\t\t\tfullscreen: true,\n\t\t\thead: false,\n\t\t\tbody: { $subview: true },\n\t\t};\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class FilterView extends JetView {\n\tconfig() {\n\t\tthis.Local = this.app.getService(\"local\");\n\n\t\treturn {\n\t\t\tview: \"popup\",\n\t\t\tcss: \"webix_pivot_filter_popup\",\n\t\t\tbody: {\n\t\t\t\tview: \"filter\",\n\t\t\t\tfield: \"value\",\n\t\t\t\ton: {\n\t\t\t\t\tonChange: config => {\n\t\t\t\t\t\tif (config == \"user\") {\n\t\t\t\t\t\t\tconst state = this.app.getState();\n\t\t\t\t\t\t\tconst structure = webix.copy(state.structure);\n\n\t\t\t\t\t\t\tlet value;\n\t\t\t\t\t\t\tstructure.filters = structure.filters.filter(filter => {\n\t\t\t\t\t\t\t\tconst exists = filter.name == this.field;\n\t\t\t\t\t\t\t\tconst inner = exists && !filter.external;\n\n\t\t\t\t\t\t\t\tif (inner) value = filter.value = this.filter.getValue();\n\n\t\t\t\t\t\t\t\treturn !exists || inner;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tstate.structure = structure;\n\n\t\t\t\t\t\t\tthis.app.callEvent(\"filter:change\", [this.field, value]);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\tShow(pos, filterObj) {\n\t\tconst popup = this.getRoot();\n\t\tconst filter = (this.filter = popup.getBody());\n\t\tthis.field = filterObj.name;\n\t\tconst list = filter.getChildViews()[2];\n\n\t\tconst field = this.Local.getField(this.field);\n\t\tconst values = webix.copy(this.Local.collectFieldValues(this.field));\n\n\t\tlist.clearAll();\n\t\tlist.parse(values);\n\n\t\tlist.define({\n\t\t\ttemplate: item => {\n\t\t\t\tlet value = item.value;\n\n\t\t\t\tif (field.type == \"date\") value = new Date(value);\n\n\t\t\t\treturn field.predicate\n\t\t\t\t\t? this.app.config.predicates[field.predicate](value)\n\t\t\t\t\t: value;\n\t\t\t},\n\t\t});\n\n\t\tfilter.define({ mode: field.type });\n\t\tfilter.config.value = \"\";\n\t\tfilter.setValue(webix.copy(filterObj.value || {}));\n\n\t\tpopup.show(pos);\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class ModeView extends JetView {\n\tconfig() {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\t\tthis.Compact = this.getParam(\"compact\");\n\n\t\tconst askin = webix.skin.$active;\n\t\tconst mini = webix.skin.$name == \"mini\" || webix.skin.$name == \"compact\";\n\t\tconst config = {\n\t\t\theight: askin.toolbarHeight,\n\t\t\tcols: [\n\t\t\t\t{\n\t\t\t\t\tview: \"segmented\",\n\t\t\t\t\tlocalId: \"modes\",\n\t\t\t\t\talign: \"middle\",\n\t\t\t\t\tinputHeight: askin.inputHeight - askin.inputPadding * (mini ? 0 : 2),\n\t\t\t\t\toptionWidth: 80,\n\t\t\t\t\twidth: 244,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ id: \"table\", value: _(\"Table\") },\n\t\t\t\t\t\t{ id: \"tree\", value: _(\"Tree\") },\n\t\t\t\t\t\t{ id: \"chart\", value: _(\"Chart\") },\n\t\t\t\t\t],\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: (v, o, c) => {\n\t\t\t\t\t\t\tif (c == \"user\") this.SetMode(v);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ width: askin.dataPadding },\n\t\t\t],\n\t\t};\n\n\t\tif (this.Compact) {\n\t\t\tconfig.css = \"webix_pivot_footer\";\n\t\t\tconfig.cols[1].width = 0;\n\t\t\tconfig.cols.unshift({});\n\t\t}\n\n\t\treturn config;\n\t}\n\n\tinit() {\n\t\tthis.State = this.getParam(\"state\");\n\n\t\tthis.on(this.State.$changes, \"mode\", mode => {\n\t\t\tthis.$$(\"modes\").setValue(mode);\n\t\t});\n\t}\n\n\t/**\n\t * Sets Pivot mode\n\t * @param {string} desired mode (\"table\", \"tree\", \"data\")\n\t */\n\tSetMode(value) {\n\t\tthis.State.mode = value;\n\t}\n}\n","import { JetView } from \"webix-jet\";\nimport ModeView from \"views/mode\";\nimport filterPopup from \"views/filter\";\n\nexport default class ToolbarView extends JetView {\n\tconfig() {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\t\tthis.Compact = this.getParam(\"compact\");\n\t\tthis.State = this.getParam(\"state\");\n\n\t\tlet config;\n\t\tif (this.Compact) {\n\t\t\tconfig = {\n\t\t\t\tview: \"icon\",\n\t\t\t\ticon: \"pt-settings\",\n\t\t\t\tinputHeight: webix.skin.$active.buttonHeight,\n\t\t\t\ton: {\n\t\t\t\t\tonItemClick: () => this.ToggleConfig(),\n\t\t\t\t},\n\t\t\t};\n\t\t} else {\n\t\t\tconst label = _(\"Configure Pivot\");\n\t\t\tconst css = \"webix_template webix_pivot_measure_size\";\n\n\t\t\t// 20px icon width and 8px additional padding\n\t\t\tconst width = 20 + 8 + webix.html.getTextSize(label, css).width;\n\t\t\tconfig = {\n\t\t\t\tview: \"template\",\n\t\t\t\tborderless: true,\n\t\t\t\twidth,\n\t\t\t\ttemplate: () => {\n\t\t\t\t\treturn `\n\t\t\t\t\t\t<span>${label}</span>\n\t\t\t\t\t\t<span class=\"pt-settings webix_pivot_toolbar_icon\"></span>`;\n\t\t\t\t},\n\t\t\t\tonClick: {\n\t\t\t\t\twebix_pivot_settings: () => this.ToggleConfig(),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tconfig.localId = \"config\";\n\t\tconfig.css = \"webix_pivot_settings\";\n\t\tconfig.tooltip = _(\"Click to configure\");\n\n\t\tconst result = {\n\t\t\tcss: \"webix_pivot_toolbar\",\n\t\t\tmargin: this.Compact ? 12 : 0,\n\t\t\tpadding: {\n\t\t\t\tleft: this.Compact ? webix.skin.$active.inputPadding : 0,\n\t\t\t},\n\t\t\theight: webix.skin.$active.toolbarHeight,\n\t\t\tcols: [config, this.GetFilters()],\n\t\t};\n\n\t\tif (!this.Compact) result.cols.push(ModeView);\n\n\t\treturn result;\n\t}\n\n\tinit() {\n\t\tthis.filterPopup = this.ui(filterPopup);\n\n\t\tthis.on(this.State.$changes, \"fields\", fields => {\n\t\t\tif (fields.length)\n\t\t\t\t// render filters after fields set\n\t\t\t\twebix.ui(this.GetFilters(), this.$$(\"filters\"));\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"structure\", (structure, old) => {\n\t\t\tif (old && this.FiltersChanged(structure, old))\n\t\t\t\twebix.ui(this.GetFilters(), this.$$(\"filters\"));\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"readonly\", val => {\n\t\t\tthis.ToggleReadonly(val);\n\t\t});\n\t}\n\t/**\n\t * Compares filters when structure changes\n\t * @param {Object} structure - current structure\n\t * @param {Object} oldStructure - previous structure\n\t * @returns {boolean} result of comparison\n\t */\n\tFiltersChanged(structure, oldStructure) {\n\t\tif (structure.filters.length == oldStructure.filters.length) {\n\t\t\tfor (let i = 0; i < structure.filters.length; i++) {\n\t\t\t\tconst filter = structure.filters[i];\n\t\t\t\tconst old = oldStructure.filters[i];\n\t\t\t\tif (filter.name != old.name || filter.external != old.external)\n\t\t\t\t\treturn true;\n\t\t\t\tif (JSON.stringify(filter.value) != JSON.stringify(old.value))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t} else return true;\n\n\t\treturn false;\n\t}\n\t/**\n\t * Toggles the configuration window\n\t */\n\tToggleConfig() {\n\t\tthis.State.config = !this.State.config;\n\t}\n\t/**\n\t * Controls visibility of a button with Pivot settings\n\t * @param {boolean} val - indicates whether Pivot is in a readonly mode\n\t */\n\tToggleReadonly(val) {\n\t\tif (val) this.$$(\"config\").hide();\n\t\telse this.$$(\"config\").show();\n\t}\n\t/**\n\t * Gets configuration for toolbar filters\n\t * @returns {Object} layout with all filters\n\t */\n\tGetFilters() {\n\t\tconst structure = this.State.structure;\n\t\tconst filters = [];\n\n\t\tif (this.State.fields.length)\n\t\t\t// toolbar renders before fields set\n\t\t\tstructure.filters.forEach(filter => {\n\t\t\t\tif (!filter.external) filters.push(this.FilterConfig(filter));\n\t\t\t});\n\n\t\tconst askin = webix.skin.$active;\n\t\tconst padding = (askin.toolbarHeight - askin.buttonHeight) / 2;\n\t\treturn {\n\t\t\tview: \"scrollview\",\n\t\t\tborderless: true,\n\t\t\tscroll: \"x\",\n\t\t\tbody: {\n\t\t\t\tmargin: 8,\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: this.Compact ? 0 : 8,\n\t\t\t\t\ttop: padding + askin.inputPadding,\n\t\t\t\t\tbottom: padding + askin.inputPadding,\n\t\t\t\t},\n\t\t\t\tlocalId: \"filters\",\n\t\t\t\tcols: filters,\n\t\t\t},\n\t\t};\n\t}\n\t/**\n\t * Gets configuration a single toolbar filter\n\t * @param {Object} filter - filter object from structure\n\t * @returns {Object} filter UI\n\t */\n\tFilterConfig(filter) {\n\t\tconst label = this.app.getService(\"local\").getField(filter.name).value;\n\t\tconst css = \"webix_template webix_pivot_measure_size\";\n\n\t\t// 20px icon width and 8px additional padding\n\t\tconst width =\n\t\t\t(this.Compact ? 0 : 20 + 8) + webix.html.getTextSize(label, css).width;\n\t\treturn {\n\t\t\tview: \"template\",\n\t\t\tborderless: true,\n\t\t\twidth,\n\t\t\tcss: \"webix_pivot_filter\",\n\t\t\ttemplate: () => {\n\t\t\t\tconst value = filter.value;\n\t\t\t\tconst activeCss =\n\t\t\t\t\tvalue && (value.includes || value.condition.filter)\n\t\t\t\t\t\t? \"webix_pivot_active_filter\"\n\t\t\t\t\t\t: \"\";\n\t\t\t\tconst icon = !this.Compact\n\t\t\t\t\t? \"<span class='pt-filter webix_pivot_toolbar_icon'></span>\"\n\t\t\t\t\t: \"\";\n\t\t\t\treturn `<div class=\"webix_pivot_filter_inner ${activeCss}\">\n\t\t\t\t\t<span>${label}</span>\n\t\t\t\t\t${icon}\n\t\t\t\t</div>`;\n\t\t\t},\n\t\t\tonClick: {\n\t\t\t\twebix_pivot_filter: function() {\n\t\t\t\t\tthis.$scope.filterPopup.Show(this.$view, filter);\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n}\n","webix.protoUI(\n\t{\n\t\tname: \"r-layout\",\n\t\tsizeTrigger(width, handler, value) {\n\t\t\tthis._compactValue = value;\n\t\t\tthis._compactWidth = width;\n\t\t\tthis._compactHandler = handler;\n\n\t\t\tthis._checkTrigger(this.$view.width, value);\n\t\t},\n\t\t_checkTrigger(x, value) {\n\t\t\tif (this._compactWidth) {\n\t\t\t\tif (\n\t\t\t\t\t(x <= this._compactWidth && !value) ||\n\t\t\t\t\t(x > this._compactWidth && value)\n\t\t\t\t) {\n\t\t\t\t\tthis._compactWidth = null;\n\t\t\t\t\tthis._compactHandler(!value);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t$setSize(x, y) {\n\t\t\tif (this._checkTrigger(x, this._compactValue))\n\t\t\t\treturn webix.ui.layout.prototype.$setSize.call(this, x, y);\n\t\t},\n\t},\n\twebix.ui.layout\n);\n","import { JetView } from \"webix-jet\";\nimport ModeView from \"views/mode\";\nimport ToolbarView from \"views/toolbar\";\n\nimport \"../helpers/responsive\";\n\nexport default class MainView extends JetView {\n\tconfig() {\n\t\tconst fCompact = this.getParam(\"forceCompact\");\n\t\tif (!webix.isUndefined(fCompact)) this.setParam(\"compact\", fCompact);\n\t\tthis.Compact = this.getParam(\"compact\");\n\n\t\tconst rows = [\n\t\t\tToolbarView,\n\t\t\t{\n\t\t\t\tview: webix.isUndefined(fCompact) ? \"r-layout\" : \"layout\",\n\t\t\t\tlocalId: \"main\",\n\t\t\t\tcols: [{ $subview: true }],\n\t\t\t},\n\t\t];\n\n\t\tif (this.Compact) {\n\t\t\trows.push(ModeView, {\n\t\t\t\t$subview: true,\n\t\t\t\tname: \"edit\",\n\t\t\t\tpopup: true,\n\t\t\t});\n\t\t} else {\n\t\t\trows[1].cols.push({\n\t\t\t\tview: \"proxy\",\n\t\t\t\twidth: 420,\n\t\t\t\tlocalId: \"edit\",\n\t\t\t\tcss: \"webix_pivot_config_container webix_shadow_medium\",\n\t\t\t\tborderless: true,\n\t\t\t\thidden: true,\n\t\t\t\tbody: { $subview: true, name: \"edit\" },\n\t\t\t});\n\t\t}\n\n\t\treturn { margin: 0, rows };\n\t}\n\n\tinit() {\n\t\tconst state = this.getParam(\"state\");\n\t\tconst main = this.$$(\"main\");\n\n\t\tif (main.sizeTrigger)\n\t\t\tmain.sizeTrigger(\n\t\t\t\tthis.app.config.compactWidth,\n\t\t\t\tmode => this.SetCompactMode(mode),\n\t\t\t\t!!this.Compact\n\t\t\t);\n\n\t\tthis.on(state.$changes, \"mode\", mode => {\n\t\t\tthis.show(\"./\" + (mode == \"chart\" ? \"chart\" : \"table\"));\n\t\t});\n\n\t\tthis.on(state.$changes, \"config\", val => {\n\t\t\tif (val) this.ShowConfig();\n\t\t\telse this.HideConfig();\n\t\t});\n\t}\n\n\t/** Shows configuration window*/\n\tShowConfig() {\n\t\tif (this.Compact) {\n\t\t\tthis.show(\"config.popup/config\", {\n\t\t\t\ttarget: \"edit\",\n\t\t\t});\n\t\t} else {\n\t\t\tthis.$$(\"edit\").show();\n\t\t\tthis.show(\"config\", {\n\t\t\t\ttarget: \"edit\",\n\t\t\t});\n\t\t}\n\t}\n\n\t/** Hides configuration window*/\n\tHideConfig() {\n\t\t// we need to destroy the view inside first\n\t\tthis.show(\"_blank\", { target: \"edit\" });\n\n\t\tif (!this.Compact) this.$$(\"edit\").hide();\n\t}\n\n\tSetCompactMode(mode) {\n\t\t//let it render, then recreate\n\t\twebix.delay(() => {\n\t\t\tthis.setParam(\"compact\", mode);\n\t\t\tif (!mode) webix.fullscreen.exit();\n\t\t\tthis.refresh();\n\t\t});\n\t}\n}\n","import { JetView } from \"webix-jet\";\n\nexport default class TableView extends JetView {\n\tconfig() {\n\t\tthis.Config = this.app.config; //state props\n\t\tthis.Local = this.app.getService(\"local\");\n\t\tconst state = (this.State = this.getParam(\"state\", true));\n\n\t\tconst table = {\n\t\t\tview: \"treetable\",\n\t\t\t$mainView: true,\n\t\t\tlocalId: \"data\",\n\t\t\tcss: \"webix_data_border webix_header_border\",\n\t\t\tselect: true,\n\t\t\tleftSplit: state.mode == \"table\" ? state.structure.rows.length : 1,\n\t\t\tresizeColumn: true,\n\t\t\tborderless: true,\n\t\t\tcolumns: [],\n\t\t\tfooter: state.datatable.footer,\n\t\t};\n\n\t\twebix.extend(table, state.datatable, true);\n\n\t\treturn table;\n\t}\n\n\tinit() {\n\t\tthis.LoadData();\n\n\t\tthis.on(this.State.$changes, \"structure\", (structure, old) => {\n\t\t\tif (old) this.UpdateStructure();\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"datatable\", (val, o) => {\n\t\t\tif (o) this.refresh();\n\t\t});\n\n\t\tthis.on(this.State.$changes, \"mode\", (val, o) => {\n\t\t\t// [FIXME] does not rerender view via toolbar mode handler\n\t\t\t// if users switch between table and tree after visiting chart tab\n\t\t\tif (o && o != \"chart\") this.refresh();\n\t\t});\n\t}\n\t/**\n\t * Loads data to a table\n\t * @returns {Promise} promise that resolves when data is parsed\n\t */\n\tLoadData() {\n\t\treturn this.Local.getData().then(data => {\n\t\t\tthis.UpdateTable(data);\n\t\t});\n\t}\n\t/**\n\t * Updates table during structure changes\n\t */\n\tUpdateStructure() {\n\t\tconst data = this.Local.getPivotData();\n\n\t\tthis.UpdateTable(data);\n\t}\n\t/**\n\t * Updates table data\n\t * @param {Array} data - array of data\n\t */\n\tUpdateTable(data) {\n\t\tconst table = this.$$(\"data\");\n\t\ttable.clearAll();\n\t\tif (this.State.mode == \"table\")\n\t\t\ttable.config.leftSplit = this.State.structure.rows.length;\n\n\t\ttable.refreshColumns(this.SetColumns(data.header, data.total, data.marks));\n\t\ttable.parse(data.data);\n\t}\n\t/**\n\t * Prepares table columns\n\t * @param {Array} columns - array with columns\n\t * @param {Array} totals - array with total values for columns\n\t * @param {Array} marks - array with min/max marks for columns\n\t * @returns {Array} column configurations\n\t */\n\tSetColumns(columns, totals, marks) {\n\t\tconst _ = this.app.getService(\"locale\")._;\n\t\tconst left =\n\t\t\tthis.State.mode == \"table\" ? this.State.structure.rows.length : 1;\n\n\t\tfor (let i = 0; i < columns.length; i++) {\n\t\t\tif (!i) {\n\t\t\t\tthis.SetFirstColumn(columns[i], _);\n\t\t\t} else {\n\t\t\t\tif (i >= left) columns[i].sort = \"int\";\n\t\t\t\telse if (this.State.mode == \"table\") columns[i].width = 200;\n\n\t\t\t\tif (!columns[i].format && i >= left)\n\t\t\t\t\tcolumns[i].format = this.CellFormat;\n\n\t\t\t\tif (marks)\n\t\t\t\t\tcolumns[i].cssFormat = (v, row, rid, cid) => {\n\t\t\t\t\t\tconst col = marks[rid - 1];\n\t\t\t\t\t\tconst css = col ? col[cid - 1] : null;\n\t\t\t\t\t\treturn css ? css.join(\" \") : \"\";\n\t\t\t\t\t};\n\n\t\t\t\tconst header = columns[i].header;\n\t\t\t\tfor (let j = 0; j < header.length; j++) {\n\t\t\t\t\tlet h = header[j];\n\t\t\t\t\tif (h) {\n\t\t\t\t\t\tif (!j && h.name == \"total\") {\n\t\t\t\t\t\t\t//rengine for total column?\n\t\t\t\t\t\t\th.text = _(\"Total\");\n\t\t\t\t\t\t} else if (j == header.length - 1) {\n\t\t\t\t\t\t\th.text = this.HeaderTemplate(h, _);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (totals.length) {\n\t\t\t\t\tcolumns[i].footer = this.CellFormat(totals[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn columns;\n\t}\n\t/**\n\t * Prepares first column\n\t * @param {Object} column - column configuration\n\t * @param {function} _ - function for translating text labels\n\t */\n\tSetFirstColumn(column, _) {\n\t\tif (this.State.mode == \"tree\") {\n\t\t\tcolumn.header = \"\";\n\t\t\tcolumn.width = 300;\n\t\t\tcolumn.template = (obj, common) => {\n\t\t\t\treturn common.treetable(obj, common) + obj[1];\n\t\t\t};\n\t\t} else {\n\t\t\tcolumn.header = column.header[0].text;\n\t\t\tcolumn.width = 200;\n\t\t}\n\t\tif (this.State.datatable.footer) column.footer = _(\"Total\");\n\t}\n\t/**\n\t * Sets a template for column header\n\t * @param {Object} line - object with header line properties\n\t * @param {function} _ - function for translating text labels\n\t * @returns {string} string with header text\n\t */\n\tHeaderTemplate(line, _) {\n\t\tif (line.operation && line.text != line.operation) {\n\t\t\tlet text = line.text.split(\",\");\n\t\t\ttext = text.map(t => this.Local.getField(t).value).join(\", \");\n\t\t\treturn `${text} <span class=\"webix_pivot_operation\">${_(\n\t\t\t\tline.operation\n\t\t\t)}</span>`;\n\t\t} else return this.Local.fixMath(line.text);\n\t}\n\t/**\n\t * Formats a cell value\n\t * @param {(number|string)} value - raw value\n\t * @returns {(number|string)} formatted value\n\t */\n\tCellFormat(value) {\n\t\tif (!value) value = value === 0 ? \"0\" : \"\";\n\n\t\treturn value ? parseFloat(value).toFixed(3) : value;\n\t}\n}\n","import m0 from \"views/chart\";\nimport m1 from \"views/config/index.js\";\nimport m2 from \"views/config/popup\";\nimport m3 from \"views/config/properties/chart\";\nimport m4 from \"views/config/properties/group\";\nimport m5 from \"views/config/properties/index.js\";\nimport m6 from \"views/config/properties/table\";\nimport m7 from \"views/config/properties/values\";\nimport m8 from \"views/filter\";\nimport m9 from \"views/main\";\nimport m10 from \"views/mode\";\nimport m11 from \"views/table\";\nimport m12 from \"views/toolbar\";\nimport { JetView } from \"webix-jet\";\n\nconst views = { JetView };\nviews[\"chart\"] = m0;\nviews[\"config\"] = m1;\nviews[\"config/popup\"] = m2;\nviews[\"config/properties/chart\"] = m3;\nviews[\"config/properties/group\"] = m4;\nviews[\"config/properties\"] = m5;\nviews[\"config/properties/table\"] = m6;\nviews[\"config/properties/values\"] = m7;\nviews[\"filter\"] = m8;\nviews[\"main\"] = m9;\nviews[\"mode\"] = m10;\nviews[\"table\"] = m11;\nviews[\"toolbar\"] = m12;\n\nexport default views;\n","const asc = (a, b) => (a.key > b.key ? 1 : -1);\nconst desc = (a, b) => (a.key < b.key ? 1 : -1);\nclass DataDimension {\n    constructor(table, getValue, label, meta, sort) {\n        if (sort === \"desc\") {\n            this._sort = desc;\n        }\n        else if (sort === \"asc\") {\n            this._sort = asc;\n        }\n        else if (sort) {\n            this._sort = (a, b) => sort(a.key, b.key);\n        }\n        this._label = label;\n        this._meta = meta || null;\n        this._table = table;\n        this._getter = getValue;\n        this._prepared = 0;\n    }\n    getIndexes() {\n        return this._indexes;\n    }\n    getValue(i) {\n        return this._values[i].key;\n    }\n    getSize() {\n        return this._values.length;\n    }\n    getLabel() {\n        return this._label;\n    }\n    getOptions() {\n        this._prepareOptions();\n        return this._values.map(a => a.key);\n    }\n    getMeta() {\n        return this._meta;\n    }\n    reset() {\n        this._prepared = 0;\n    }\n    prepare() {\n        // eslint-disable-next-line\n        if (this._prepared & 1)\n            return;\n        // eslint-disable-next-line\n        this._prepared = this._prepared | 1;\n        this._prepareOptions();\n        const { _table, _getter, _keys } = this;\n        const fSize = _table.count();\n        this._values.forEach((a, i) => (a.index = i));\n        const indexes = (this._indexes = new Array(fSize));\n        for (let i = 0; i < fSize; i++) {\n            const key = _getter(i);\n            indexes[i] = _keys.get(key).index;\n        }\n    }\n    _prepareOptions() {\n        // eslint-disable-next-line\n        if (this._prepared & 2)\n            return;\n        // eslint-disable-next-line\n        this._prepared = this._prepared | 2;\n        const { _table, _getter } = this;\n        const fSize = _table.count();\n        const keys = (this._keys = new Map());\n        const values = (this._values = []);\n        for (let i = 0; i < fSize; i++) {\n            const key = _getter(i);\n            const index = keys.get(key);\n            if (typeof index === \"undefined\") {\n                keys.set(key, (values[values.length] = { key, index: 0 }));\n            }\n        }\n        if (this._sort)\n            values.sort(this._sort);\n    }\n}\n\nclass DataExport {\n    constructor(pivot) {\n        this._pivot = pivot;\n    }\n    toArray({ cleanRows, filters, ops, total, marks, aggregateRows, aggregateColumns, }) {\n        let row;\n        const out = [];\n        const limit = this._pivot.getLimit();\n        const maxRow = limit.rows || 0;\n        this._pivot.filter(filters);\n        this._pivot.operations(ops, []);\n        this._pivot.resetCursor();\n        let count = 0;\n        while ((row = this._pivot.next())) {\n            out.push(row);\n            count++;\n            if (maxRow === count)\n                break;\n        }\n        const [scaleWidth, width] = this._pivot.getWidth();\n        if (cleanRows)\n            this._cleanRows(out, scaleWidth);\n        const result = {\n            data: out,\n            width: width + scaleWidth,\n            scaleWidth,\n        };\n        if (total)\n            result.total = this._pivot.total(result, total);\n        result.allRows = this._pivot.aggregateRows(result, aggregateRows) || [];\n        result.allColumns =\n            this._pivot.aggregateColumns(result, aggregateColumns) || [];\n        if (marks)\n            result.marks = this._pivot.mark(result, marks);\n        return result;\n    }\n    toNested({ filters, ops, groupOps, total, aggregateRows, aggregateColumns, marks, }) {\n        this._pivot.filter(filters);\n        this._pivot.operations(ops, groupOps || []);\n        this._pivot.resetCursor();\n        const result = this._pivot.nested();\n        if (total)\n            result.total = this._pivot.total(result, total);\n        result.allRows = this._pivot.aggregateRows(result, aggregateRows) || [];\n        result.allColumns =\n            this._pivot.aggregateColumns(result, aggregateColumns) || [];\n        if (marks)\n            result.marks = this._pivot.mark(result, marks);\n        return result;\n    }\n    toXHeader(data, config) {\n        return this._pivot.getXHeader(data, config);\n    }\n    _cleanRows(data, rowsLength) {\n        const count = data.length;\n        const prev = new Array(rowsLength);\n        for (let j = 0; j < count; j++) {\n            const row = data[j];\n            for (let i = 0; i < rowsLength; i++) {\n                if (prev[i] !== row[i]) {\n                    for (let j = i; j < rowsLength; j++)\n                        prev[j] = row[j];\n                    break;\n                }\n                row[i] = \"\";\n            }\n        }\n    }\n}\n\nfunction t(t,e){let n=\"\";const o=t.length;let r=0,i=!1,s=!1,u=0;for(;r<o;){const o=t[r];if(r++,'\"'===o)i?n+=t.substr(u,r-u):u=r-1,i=!i;else {if(i)continue;const c=\",\"===o||\"/\"===o||\"*\"===o||\"+\"===o||\"-\"===o||\"(\"===o||\")\"===o,f=\" \"===o||\"\\t\"===o||\" \\n\"===o||\"\\r\"===o;if(s){if(!c&&!f)continue;{const i=t.substr(u,r-u-1);n+=\"(\"===o?e.method(i):e.property(i),s=!1;}}if(f)continue;if(c)n+=o;else {\"0\"===o||\"1\"===o||\"2\"===o||\"3\"===o||\"4\"===o||\"5\"===o||\"6\"===o||\"7\"===o||\"8\"===o||\"9\"===o?n+=o:(s=!0,u=r-1);}}}return s&&(n+=e.property(t.substr(u,r-u))),n}function e(e,n){return new Function(n.propertyName,n.methodName,n.contextName,\"return \"+t(e,n))}\n\nfunction optimize(table, order, code, allMath) {\n    const math = getMath(table, code);\n    const ctx = {\n        table,\n        order,\n        from: 0,\n        to: 0,\n        array: (i, c) => {\n            const size = c.to - c.from;\n            const temp = new Array(size);\n            const getter = cache[i];\n            for (let j = 0; j < size; j++) {\n                temp[j] = getter(c.order[j + c.from]);\n            }\n            return temp;\n        },\n    };\n    return function (from, to) {\n        ctx.from = from;\n        ctx.to = to;\n        return math(0, allMath, ctx);\n    };\n}\nfunction optimizeGroup(code, allMath) {\n    const math = getGroupMath(code);\n    return function (v) {\n        return math(v, allMath, null);\n    };\n}\nlet id = 0;\nconst cache = [];\nfunction getMath(table, rule) {\n    return e(rule, {\n        propertyName: \"d\",\n        methodName: \"m\",\n        contextName: \"c\",\n        property: (a) => {\n            const i = id;\n            cache[i] = table.getColumn(a).getter;\n            id += 1;\n            return `c.array(\"${i}\", c)`;\n        },\n        method: (a) => {\n            return `m.${a.toLowerCase()}`;\n        },\n    });\n}\nfunction getGroupMath(rule) {\n    return e(rule, {\n        propertyName: \"d\",\n        methodName: \"m\",\n        contextName: \"c\",\n        property: () => {\n            return `d`;\n        },\n        method: (a) => {\n            return `m.${a.toLowerCase()}`;\n        },\n    });\n}\n\nconst and = (a, b) => c => a(c) && b(c);\nfunction buildFinder(data, key, value, context) {\n    const getValue = context.getter(data, key);\n    if (typeof value !== \"object\") {\n        const check = context.compare[\"eq\"](value);\n        return i => check(getValue(i));\n    }\n    else {\n        const ops = Object.keys(value);\n        let result = null;\n        for (let i = 0; i < ops.length; i++) {\n            const check = context.compare[ops[i].toLowerCase()](value[ops[i]]);\n            const step = i => check(getValue(i));\n            result = result ? and(result, step) : step;\n        }\n        return result;\n    }\n}\nfunction build(table, rule, context) {\n    const keys = Object.keys(rule);\n    let result = null;\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const step = buildFinder(table, key, rule[key], context);\n        result = result ? and(result, step) : step;\n    }\n    return result;\n}\nfunction filter(order, table, rule, context) {\n    const filter = build(table, rule, context);\n    return order.filter(n => filter(n));\n}\n\nclass DataPivot {\n    constructor(table, rows, cols, filters, config) {\n        this._rows = rows;\n        this._cols = cols;\n        this._dims = rows.concat(cols);\n        this._table = table;\n        this._context = config;\n        this._cursor = -1;\n        this._order = this._base_order = this._sort();\n        this._data = this._dims.map(a => a.getIndexes());\n        this.filter(filters, true);\n    }\n    resetCursor() {\n        this._cursor = 0;\n        this._group = this._dims.map(() => null);\n        if (this._order.length) {\n            if (this._rows.length)\n                this._nextRow();\n            if (this._cols.length)\n                this._nextColumn();\n        }\n    }\n    next() {\n        const { _cursor, _cols, _order, _group, _ops, _rows } = this;\n        if (this._cursor >= _order.length)\n            return null;\n        const dimsSize = _rows.length;\n        const out = new Array(dimsSize + _ops.length * _cols.length);\n        // dimensions\n        for (let i = 0; i < dimsSize; i++)\n            out[i] = _rows[i].getValue(_group[i]);\n        // get end of next line ( all dataset for columns mode )\n        const to = this._rows.length\n            ? this._nextRow(_cols.length > 0)\n            : _order.length;\n        this._fillRow(out, _cursor, to, dimsSize);\n        this._cursor = to;\n        return out;\n    }\n    nested() {\n        const { _cols, _order, _rows } = this;\n        const dimSize = _rows.length;\n        const dimOutSize = dimSize > 0 ? 1 : 0;\n        const levels = [{ data: [], values: [] }];\n        const starts = _rows.map(() => 0);\n        const data = [];\n        let prev = [];\n        let now = [];\n        let from = this._cursor;\n        let count = 0;\n        const limit = this._context.limit.rows;\n        const width = Math.min(this._context.limit.columns, (_cols.length ? this._sizes[0] * _cols[0].getSize() : 0) + dimOutSize);\n        while (this._cursor < _order.length) {\n            const out = new Array(width);\n            prev = now;\n            now = [].concat(this._group);\n            // get end of next line ( all dataset for columns mode )\n            const to = this._rows.length\n                ? this._nextRow(_cols.length > 0)\n                : _order.length;\n            this._fillRow(out, from, to, dimOutSize);\n            if (dimSize > 0) {\n                for (let level = 0; level < dimSize; level++) {\n                    if (now[level] != prev[level]) {\n                        for (let j = level; j < dimSize; j++) {\n                            const index = j + 1;\n                            const last = index === dimSize;\n                            const obj = (levels[index] = {\n                                id: last ? data.length + 1 : 0,\n                                data: last ? null : [],\n                                values: last ? out : [_rows[j].getValue(now[j])],\n                            });\n                            starts[index] = from;\n                            levels[j].data.push(obj);\n                        }\n                        break;\n                    }\n                }\n                out[0] = _rows[dimSize - 1].getValue(now[dimSize - 1]);\n                levels[dimSize].values = out;\n            }\n            else {\n                levels[0].data.push({ data: null, values: out });\n            }\n            data.push(out);\n            count++;\n            if (count >= limit)\n                break;\n            this._cursor = from = to;\n        }\n        this._fillGroupRowInner(levels[0], 0, [null, ...this._groupOps].slice(0, _rows.length), width);\n        return { tree: levels[0].data, data, width, scaleWidth: dimOutSize };\n    }\n    getLimit() {\n        return this._context.limit;\n    }\n    getWidth() {\n        return [\n            this._rows.length,\n            this._cols.length && this._ops.length\n                ? this._cols[0].getSize() * this._sizes[0]\n                : 0,\n        ];\n    }\n    getXHeader(result, hConfig) {\n        const { _cols, _rows, _ops, _opInfo } = this;\n        const { nonEmpty, meta } = hConfig || {};\n        const data = result.data;\n        const isNested = result.tree;\n        // compressed line\n        const line = [];\n        // rows prefix\n        const rpref = result.tree ? Math.min(_rows.length, 1) : _rows.length;\n        // count of operations, repeat step of bottom scale\n        const ostep = _ops.length;\n        // how many scale units in one parent\n        const unitsInParent = _cols.map(a => a.getSize());\n        // calculate full width of data\n        const length = unitsInParent.reduce((prev, value) => prev * value, ostep);\n        const fullLength = Math.min(rpref + length, this._context.limit.columns);\n        // how many data points per unit\n        let temp = length;\n        const unitSizes = unitsInParent.map(a => (temp = temp / a));\n        // result header\n        const out = [];\n        this._cols.forEach(() => out.push(new Array(fullLength)));\n        // build compressed order\n        if (nonEmpty) {\n            //check all cells, include columns of cells with data\n            for (let i = 0; i < rpref; i++)\n                line.push(i);\n            for (let j = rpref; j < fullLength; j += ostep) {\n                outer: for (let i = 0; i < data.length; i++) {\n                    if (typeof data[i][j] !== \"undefined\") {\n                        for (let i = 0; i < _ops.length; i++)\n                            line.push(j + i);\n                        break outer;\n                    }\n                }\n            }\n            // now check each scale line\n            for (let j = 0; j < _cols.length; j++) {\n                const step = unitSizes[j];\n                let start = -1;\n                let end = 0;\n                let colspan = 0;\n                let text;\n                // against each non-empty column\n                for (let i = rpref; i < line.length; i += ostep) {\n                    const test = line[i];\n                    // if we inside of span\n                    if (test < end) {\n                        colspan += ostep;\n                    }\n                    else {\n                        // we have reached the new span\n                        // setting old one if any\n                        if (colspan !== 0) {\n                            out[j][start] = { colspan, text };\n                        }\n                        // store position of new span\n                        const ind = Math.floor((test - rpref) / step);\n                        start = test;\n                        end = (ind + 1) * step + rpref;\n                        colspan = ostep;\n                        // store related text\n                        text = _cols[j].getValue(ind % unitsInParent[j]);\n                    }\n                }\n                // setting last span\n                if (colspan !== 0)\n                    out[j][start] = { colspan, text };\n            }\n        }\n        else {\n            // for each scale\n            for (let i = 0; i < _cols.length; i++) {\n                const size = unitsInParent[i];\n                const step = unitSizes[i];\n                let ind = 0;\n                // set value at n-th cell\n                for (let j = rpref; j < fullLength; j += step) {\n                    if (step === 1) {\n                        out[i][j] = _cols[i].getValue(ind++);\n                    }\n                    else {\n                        out[i][j] = { text: _cols[i].getValue(ind++), colspan: step };\n                    }\n                    // repeat dimension values\n                    if (ind >= size)\n                        ind = 0;\n                }\n            }\n        }\n        // add bottom line, with operations\n        if (this._ops) {\n            const opNames = new Array(fullLength);\n            const step = _ops.length;\n            for (let j = rpref; j < fullLength; j += step)\n                for (let z = 0; z < step; z++)\n                    opNames[j + z] = _opInfo[z].label;\n            out.push(opNames);\n        }\n        // prepend row labels\n        for (let i = 0; i < rpref; i++) {\n            const rowspan = _cols.length + (this._ops ? 1 : 0);\n            if (isNested) {\n                out[0][0] = { text: \"\", rowspan };\n                break;\n            }\n            const text = _rows[i].getLabel();\n            out[0][i] = rowspan > 1 ? { text, rowspan } : text;\n        }\n        const res = { data: out };\n        // add compression line to output\n        if (nonEmpty)\n            res.nonEmpty = line;\n        if (meta) {\n            const metaLine = new Array(fullLength);\n            for (let i = 0; i < rpref; i++)\n                metaLine[i] = _rows[i].getMeta();\n            const step = _ops.length;\n            for (let j = rpref; j < fullLength; j += step)\n                for (let z = 0; z < step; z++)\n                    metaLine[j + z] = _opInfo[z].meta;\n            res.meta = metaLine;\n        }\n        return res;\n    }\n    filter(rules, master) {\n        if (!rules || Object.keys(rules).length === 0) {\n            if (!master && this._masterRules)\n                rules = Object.assign(Object.assign({}, this._masterRules), rules);\n            else {\n                this._order = this._base_order;\n                return;\n            }\n        }\n        if (master)\n            this._masterRules = rules;\n        this._order = filter(this._base_order, this._table, rules, this._context);\n    }\n    operations(ops, groupOps) {\n        const { _table, _order, _context } = this;\n        ops = ops || [];\n        this._ops = ops.map(p => optimize(_table, _order, typeof p === \"string\" ? p : p.math, _context.math));\n        this._opInfo = ops.map(p => {\n            if (typeof p === \"string\") {\n                return { label: p, math: p };\n            }\n            else {\n                return Object.assign(Object.assign({}, p), { label: p.label || p.math });\n            }\n        });\n        this._groupOps = groupOps.map(ops => {\n            return ops\n                ? ops.map(p => optimizeGroup(typeof p === \"string\" ? p : p.math, _context.math))\n                : null;\n        });\n        this._setSizes();\n    }\n    total(result, total) {\n        const ops = total.map(p => optimizeGroup(typeof p === \"string\" ? p : p.math, this._context.math));\n        if (result.tree) {\n            const temp = { data: result.tree, values: [] };\n            this._fillGroupRowInner(temp, 0, [ops], result.width);\n            return temp.values;\n        }\n        else {\n            return this._fillTotal(result.data, ops, result.width, result.scaleWidth);\n        }\n    }\n    aggregateRows(result, ops) {\n        const config = {};\n        let exit = true;\n        for (const key in ops) {\n            const test = ops[key];\n            config[key] = optimizeGroup(test, this._context.math);\n            exit = false;\n        }\n        if (exit)\n            return null;\n        return this._filAggrRows(result.data, config, result.width, result.scaleWidth);\n    }\n    aggregateColumns(result, ops) {\n        const config = {};\n        let exit = true;\n        for (const key in ops) {\n            const test = ops[key];\n            config[key] = optimizeGroup(test, this._context.math);\n            exit = false;\n        }\n        if (exit)\n            return null;\n        return this._filAggrCols(result.data, config, result.width, result.scaleWidth);\n    }\n    mark(result, ops) {\n        const order = [];\n        for (const key in ops)\n            order.push([key, ops[key]]);\n        if (!order.length)\n            return null;\n        const out = [];\n        const width = result.width;\n        const obj = result.data;\n        const len = obj.length;\n        for (let j = 0; j < len; j++) {\n            const marks = [];\n            out.push(marks);\n            for (let i = result.scaleWidth; i < width; i++) {\n                const value = obj[j][i];\n                if (typeof value !== \"undefined\") {\n                    for (let z = 0; z < order.length; z++) {\n                        const cm = order[z][1](value, result.allRows[i], result.allColumns[j]);\n                        if (cm) {\n                            if (marks[i])\n                                marks[i].push(order[z][0]);\n                            else\n                                marks[i] = [order[z][0]];\n                        }\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    _fillGroupRowInner(obj, level, maths, width) {\n        const needNext = maths.length > level;\n        const data = obj.data;\n        if (needNext)\n            for (let i = 0; i < obj.data.length; i++)\n                this._fillGroupRowInner(data[i], level + 1, maths, width);\n        const mline = maths[level];\n        if (mline) {\n            const step = this._ops.length;\n            for (let i = 1; i <= width; i++) {\n                const op = mline[(i - 1) % step];\n                if (op) {\n                    const arr = obj.data\n                        .map(a => a.values[i])\n                        .filter(a => typeof a !== \"undefined\");\n                    if (arr.length > 0)\n                        obj.values[i] = op(arr);\n                }\n            }\n        }\n    }\n    _fillTotal(obj, mline, width, prefix) {\n        const result = [];\n        if (mline) {\n            const step = this._ops.length;\n            for (let i = prefix; i < width; i++) {\n                const op = mline[(i - 1) % step];\n                if (op) {\n                    const arr = obj.map(a => a[i]).filter(a => typeof a !== \"undefined\");\n                    if (arr.length > 0)\n                        result[i] = op(arr);\n                }\n            }\n        }\n        return result;\n    }\n    _filAggrRows(obj, mline, width, prefix) {\n        const result = [];\n        if (mline) {\n            for (let i = prefix; i < width; i++) {\n                const arr = obj.map(a => a[i]).filter(a => typeof a !== \"undefined\");\n                if (arr.length > 0) {\n                    const t = (result[i] = {});\n                    for (const key in mline) {\n                        t[key] = mline[key](arr);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _filAggrCols(obj, mline, width, prefix) {\n        const result = [];\n        if (mline) {\n            const height = obj.length;\n            for (let i = 0; i < height; i++) {\n                const arr = (prefix ? obj[i].slice(prefix) : obj[i]).filter(a => typeof a !== \"undefined\");\n                if (arr.length > 0) {\n                    const t = (result[i] = {});\n                    for (const key in mline) {\n                        t[key] = mline[key](arr);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _fillRow(out, from, to, dimsSize) {\n        const { _cols, _group, _ops, _sizes, _rows } = this;\n        const rl = _rows.length;\n        // calculations\n        if (_ops.length) {\n            if (_cols.length) {\n                let cfrom = from;\n                while (cfrom < to) {\n                    let cind = 0;\n                    for (let i = 0; i < _cols.length; i++)\n                        cind += _sizes[i] * _group[rl + i];\n                    const cto = this._nextColumn();\n                    for (let i = 0; i < _ops.length; i++) {\n                        out[cind + dimsSize + i] = _ops[i](cfrom, cto);\n                    }\n                    this._cursor = cfrom = cto;\n                }\n            }\n            else {\n                for (let i = 0; i < _ops.length; i++)\n                    out[i + dimsSize] = _ops[i](from, to);\n            }\n        }\n    }\n    _sort() {\n        const { _table, _dims } = this;\n        const size = Math.min(_table.count(), this._context.limit.raws);\n        const order = new Array(size);\n        for (let i = 0; i < size; i++) {\n            order[i] = i;\n        }\n        const dimsSize = _dims.length;\n        const dimsData = _dims.map(a => a.getIndexes());\n        order.sort((a, b) => {\n            for (let j = 0; j < dimsSize; j++) {\n                const left = dimsData[j][a];\n                const right = dimsData[j][b];\n                if (left > right)\n                    return 1;\n                if (left < right)\n                    return -1;\n            }\n            return 0;\n        });\n        return order;\n    }\n    _nextRow(silent) {\n        const { _data, _order, _group, _rows } = this;\n        const dimsSize = _rows.length;\n        let ok = true;\n        let to = this._cursor;\n        // eslint-disable-next-line\n        while (true) {\n            const ind = _order[to];\n            for (let i = 0; i < dimsSize; i++) {\n                if (_data[i][ind] != _group[i]) {\n                    if (!silent)\n                        _group[i] = _data[i][ind];\n                    ok = false;\n                }\n            }\n            if (!ok)\n                break;\n            to++;\n        }\n        return to;\n    }\n    _nextColumn() {\n        const { _data, _order, _group, _rows, _cols } = this;\n        const dimsSize = _cols.length + _rows.length;\n        let ok = true;\n        let to = this._cursor;\n        // eslint-disable-next-line\n        while (true) {\n            const ind = _order[to];\n            for (let i = 0; i < dimsSize; i++) {\n                if (_data[i][ind] != _group[i]) {\n                    _group[i] = _data[i][ind];\n                    ok = false;\n                }\n            }\n            if (!ok)\n                break;\n            to++;\n        }\n        return to;\n    }\n    _setSizes() {\n        const sizes = this._cols.map(a => a.getSize());\n        let sum = this._ops.length || 1;\n        for (let i = sizes.length - 1; i >= 0; i--) {\n            const now = sum;\n            sum *= sizes[i];\n            sizes[i] = now;\n        }\n        this._sizes = sizes;\n    }\n}\n\nclass RawTable {\n    constructor(config) {\n        this._columns = config.fields;\n        this.parse(config.data);\n    }\n    parse(data) {\n        this._raw = data;\n        this._parse_inner();\n    }\n    prepare() {\n        if (this._prepared)\n            return;\n        this._prepared = true;\n        const data = this._raw;\n        const fields = this._columns;\n        const cols = fields.filter(a => a.type === 3);\n        if (!data || !cols.length)\n            return;\n        const dataLength = data.length;\n        const columnsLength = cols.length;\n        for (let i = 0; i < dataLength; i++) {\n            for (let j = 0; j < columnsLength; j++) {\n                const col = cols[j];\n                const text = col.getter(i);\n                if (typeof text === \"string\")\n                    col.setter(i, new Date(text));\n            }\n        }\n    }\n    _parse_inner() {\n        this._columns.forEach(a => {\n            const key = a.id;\n            a.getter = i => this._raw[i][key];\n            a.setter = (i, v) => (this._raw[i][key] = v);\n        });\n    }\n    getColumn(id) {\n        return this._columns.find(a => a.id === id);\n    }\n    count() {\n        return this._raw.length;\n    }\n}\n\nclass ColumnTable extends RawTable {\n    parse(data) {\n        this._parse_init(data.length);\n        const dataLength = data.length;\n        const columnsLength = this._columns.length;\n        for (let i = 0; i < dataLength; i++) {\n            const obj = data[i];\n            for (let j = 0; j < columnsLength; j++) {\n                const col = this._columns[j];\n                col.data[i] = obj[col.id];\n            }\n        }\n    }\n    _parse_init(n) {\n        this._columns.forEach(a => {\n            const data = (a.data = new Array(n));\n            a.getter = i => data[i];\n            a.setter = (i, v) => (data[i] = v);\n        });\n    }\n    count() {\n        return this._columns[0].data.length;\n    }\n}\n\nconst methods = {\n    round: (v) => Math.round(v),\n    sum: (arr) => arr.reduce((acc, a) => acc + a, 0),\n    min: (arr) => arr.reduce((acc, a) => (a < acc ? a : acc), arr.length ? arr[0] : 0),\n    max: (arr) => arr.reduce((acc, a) => (a > acc ? a : acc), arr.length ? arr[0] : 0),\n    avg: (arr) => arr.length ? arr.reduce((acc, a) => acc + a, 0) / arr.length : 0,\n    wavg: (arr, w) => {\n        if (!arr.length)\n            return 0;\n        let count = 0;\n        let summ = 0;\n        for (let i = arr.length - 1; i >= 0; i--) {\n            count += w[i];\n            summ += arr[i] * w[i];\n        }\n        return summ / count;\n    },\n    count: (arr) => arr.length,\n    any: (arr) => (arr.length ? arr[0] : null),\n};\nconst filters = {\n    eq: (v) => (x) => x == v,\n    neq: (v) => (x) => x != v,\n    gt: (v) => (x) => x > v,\n    gte: (v) => (x) => x >= v,\n    lt: (v) => (x) => x < v,\n    lte: (v) => (x) => x <= v,\n    in: (v) => (x) => v[x],\n    hasPrefix: (v) => (x) => x.indexOf(v) === 0,\n    contains: (v) => (x) => x.indexOf(v) !== -1,\n};\nconst predicates = {\n    year: (v) => v.getFullYear(),\n    month: (v) => v.getMonth(),\n    day: (v) => v.getDay(),\n    hour: (v) => v.getHours(),\n    minute: (v) => v.getMinutes(),\n};\n\nclass Analytic {\n    constructor(cfg) {\n        this._tables = {};\n        this._dimensions = {};\n        this._preds = Object.assign({}, predicates);\n        this._maths = Object.assign({}, methods);\n        this._comps = Object.assign({}, filters);\n        if (cfg && cfg.tables)\n            cfg.tables.forEach(s => this.addTable(s));\n        if (cfg && cfg.dimensions)\n            cfg.dimensions.forEach(s => this.addDimension(s));\n    }\n    addPredicate(name, code) {\n        this._preds[name.toLowerCase()] = code;\n    }\n    addMath(name, code) {\n        this._maths[name.toLowerCase()] = code;\n    }\n    addComparator(name, code) {\n        this._comps[name.toLowerCase()] = code;\n    }\n    getDimension(id) {\n        return this._dimensions[id];\n    }\n    addDimension(s) {\n        if (this._dimensions[s.id])\n            return;\n        const table = this._tables[s.table];\n        const getter = this._predicateGetter(table, s.rule.by);\n        this._dimensions[s.id] = new DataDimension(table, getter, s.label || s.id, s.meta || s, s.sort);\n    }\n    resetDimensions(s, preserve) {\n        const prev = this._dimensions;\n        this._dimensions = {};\n        if (s)\n            s.forEach(a => {\n                const used = prev[a.id];\n                if (preserve && used)\n                    this._dimensions[a.id] = used;\n                else\n                    this.addDimension(a);\n            });\n    }\n    addTable(s) {\n        const driver = (s.driver || \"raw\") === \"raw\" ? RawTable : ColumnTable;\n        const t = (this._tables[s.id] = new driver(s));\n        if (s.prepare)\n            t.prepare();\n    }\n    getTable(id) {\n        return this._tables[id];\n    }\n    compact(table, config) {\n        const { rows, cols, filters, limit } = config;\n        const base = this._tables[table];\n        const rDims = rows ? rows.map(a => this._dimensions[a]) : [];\n        const cDims = cols ? cols.map(a => this._dimensions[a]) : [];\n        [...rDims, ...cDims].forEach(a => a.prepare());\n        const pivot = new DataPivot(base, rDims, cDims, filters, {\n            getter: this._predicateGetter.bind(this),\n            math: this._maths,\n            compare: this._comps,\n            limit: Object.assign({ rows: 10000, columns: 5000, raws: Infinity }, (limit || {})),\n        });\n        return new DataExport(pivot);\n    }\n    _predicateGetter(table, key) {\n        const find = key.indexOf(\"(\");\n        if (find !== -1) {\n            const fn = this._preds[key.substr(0, find).toLowerCase()];\n            key = key.substr(find + 1, key.length - find - 2);\n            const getter = table.getColumn(key).getter;\n            return i => fn(getter(i));\n        }\n        else {\n            return table.getColumn(key).getter;\n        }\n    }\n}\n\nexport { Analytic };\n//# sourceMappingURL=rengine.es6.js.map\n","import * as rengine from \"@xbs/rengine\";\n\nexport default class LocalData {\n\t/**\n\t * @constructor\n\t * @param {App} app - Jet App instance\n\t */\n\tconstructor(app) {\n\t\tthis._app = app;\n\t\tthis._store = {}; //aggregated data\n\n\t\tthis._data = [];\n\t\tthis._filtersHash = {};\n\n\t\tthis._state = app.getState();\n\n\t\tthis._initRengine();\n\t}\n\t/** Set list of avaible operations; adds custom operations from config */\n\t_setOperations() {\n\t\tthis.operations = [\n\t\t\t{ id: \"sum\" },\n\t\t\t{ id: \"min\" },\n\t\t\t{ id: \"max\" },\n\t\t\t{ id: \"avg\" },\n\t\t\t{ id: \"wavg\" },\n\t\t\t{ id: \"count\" },\n\t\t\t{ id: \"any\" },\n\t\t];\n\n\t\tconst extraOperations = this._app.config.operations;\n\t\tif (extraOperations)\n\t\t\tfor (let name in extraOperations) {\n\t\t\t\tthis._reng.addMath(name, extraOperations[name]);\n\t\t\t\tthis.operations.push({ id: name });\n\t\t\t}\n\t}\n\t/** Sets default filter rules */\n\t_setFilters() {\n\t\tfor (let type in webix.filters) {\n\t\t\tthis._reng.addComparator(type, v => test => {\n\t\t\t\tif (type == \"date\") test = test.valueOf();\n\n\t\t\t\tif (!v) return true;\n\t\t\t\telse if (v.includes) return v.includes.indexOf(test) != -1;\n\t\t\t\telse if (!v.condition.filter) return true;\n\t\t\t\telse\n\t\t\t\t\treturn webix.filters[type][v.condition.type](\n\t\t\t\t\t\ttest,\n\t\t\t\t\t\tv.condition.filter\n\t\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\t/** Adds predicates from config */\n\t_setPredicates() {\n\t\tconst predicates = this._app.config.predicates;\n\t\tif (predicates)\n\t\t\tfor (let name in predicates)\n\t\t\t\tthis._reng.addPredicate(name, predicates[name]);\n\t}\n\t/**\n\t * Returns fields that contain data\n\t * @param {object} firstRow - first row in data\n\t * @returns {array} data fields\n\t */\n\tgetFields(firstRow) {\n\t\tlet fields = this._app.config.fields;\n\n\t\tif (!fields) {\n\t\t\tfields = [];\n\n\t\t\tfor (let i in firstRow) {\n\t\t\t\tlet type;\n\n\t\t\t\tconst dataType = typeof firstRow[i];\n\t\t\t\tswitch (dataType) {\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttype = \"text\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\ttype = dataType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttype = \"date\";\n\t\t\t\t}\n\n\t\t\t\tfields.push({ id: i, value: i, type });\n\t\t\t}\n\t\t}\n\n\t\treturn fields;\n\t}\n\t/**\n\t * Loads data and populates store\n\t * @param {boolean} force - if true, data will be reloaded\n\t * @returns {Promise} promise that resolves with store array\n\t */\n\tgetData(force) {\n\t\tif (!Object.keys(this._store).length || force) {\n\t\t\treturn this._app\n\t\t\t\t.getService(\"backend\")\n\t\t\t\t.data()\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis._filtersHash = {};\n\t\t\t\t\tthis._table = this.getTable(data);\n\t\t\t\t\tthis._reng.addTable(this._table);\n\t\t\t\t\tthis._store = this.getPivotData();\n\t\t\t\t\treturn this._store;\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis._store = this.getPivotData();\n\t\t\treturn webix.promise.resolve(this._store);\n\t\t}\n\t}\n\t/** Inits math module */\n\t_initRengine() {\n\t\tthis._reng = new rengine.Analytic();\n\n\t\tthis._setFilters();\n\t\tthis._setOperations();\n\t\tthis._setPredicates();\n\t}\n\t/**\n\t * Сonverts data to pivot readable form\n\t * @returns {Object} object with aggregated data and its parameters\n\t */\n\tgetPivotData() {\n\t\tthis.setDimensions();\n\n\t\tconst filters = {};\n\t\tfor (let i = 0; i < this._state.structure.filters.length; i++) {\n\t\t\tconst filter = this._state.structure.filters[i];\n\n\t\t\tconst fields = this._state.fields;\n\t\t\tconst field = fields.find(field => field.id == filter.name);\n\n\t\t\tfilters[filter.name] = { [field.type]: filter.value };\n\t\t}\n\n\t\t//groups data\n\t\tconst res = this._reng.compact(this._table.id, {\n\t\t\trows: this.getRows(),\n\t\t\tcols: this.getColumns(),\n\t\t\tlimit: this.getLimits(),\n\t\t});\n\n\t\t//applies math operations to data and groups\n\t\tconst vals = this._state.structure.values;\n\t\tlet ops = [];\n\t\tlet groupOps = [];\n\t\tfor (let i = 0; i < vals.length; i++) {\n\t\t\tlet name = vals[i].name;\n\t\t\tname = webix.isArray(name) ? name.join(\",\") : name;\n\n\t\t\tconst format = vals[i].format;\n\t\t\tconst operation = vals[i].operation;\n\t\t\tconst color = vals[i].color;\n\n\t\t\tlet math = name ? `${operation}(${name})` : operation;\n\n\t\t\tops.push({\n\t\t\t\tmath,\n\t\t\t\tlabel: name,\n\t\t\t\tmeta: { operation, format, color },\n\t\t\t});\n\t\t\tgroupOps.push(math);\n\t\t}\n\n\t\t// finds min/max values in a row/column\n\t\tconst datatable = this._state.datatable;\n\t\tlet aggregateRows = {};\n\t\tlet aggregateColumns = {};\n\t\tlet marks = {};\n\n\t\tif (datatable.minY) {\n\t\t\taggregateRows.min = \"min(n)\";\n\t\t\tmarks.webix_min_y = (v, rows) => v === rows.min;\n\t\t}\n\t\tif (datatable.maxY) {\n\t\t\taggregateRows.max = \"max(n)\";\n\t\t\tmarks.webix_max_y = (v, rows) => v === rows.max;\n\t\t}\n\t\tif (datatable.minX) {\n\t\t\taggregateColumns.min = \"min(n)\";\n\t\t\tmarks.webix_min_x = (v, rows, cols) => v === cols.min;\n\t\t}\n\t\tif (datatable.maxX) {\n\t\t\taggregateColumns.max = \"max(n)\";\n\t\t\tmarks.webix_max_x = (v, rows, cols) => v === cols.max;\n\t\t}\n\n\t\t// colulates totals for data or groups\n\t\tconst total = new Array(ops.length);\n\t\tif (datatable.footer) {\n\t\t\tfor (let i = 0; i < ops.length; i++) {\n\t\t\t\tlet operation = ops[i].meta.operation;\n\t\t\t\tif (datatable.footer != \"sumOnly\" || operation == \"sum\") {\n\t\t\t\t\tif (operation.indexOf(\"(\") != -1)\n\t\t\t\t\t\t// complex math\n\t\t\t\t\t\toperation = \"sum\";\n\t\t\t\t\telse if (operation == \"wavg\") operation = \"avg\";\n\n\t\t\t\t\ttotal[i] = operation + \"(group)\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet result;\n\t\tlet header;\n\n\t\t//plain data\n\t\tif (this._state.mode == \"table\") {\n\t\t\tresult = res.toArray({\n\t\t\t\tfilters,\n\t\t\t\tops,\n\t\t\t\taggregateRows,\n\t\t\t\taggregateColumns,\n\t\t\t\tmarks,\n\t\t\t\ttotal,\n\t\t\t\t//remove repetitions in 'parent' col in 'table' mode\n\t\t\t\tcleanRows: datatable.cleanRows,\n\t\t\t});\n\t\t\theader = this.getHeader(res, result);\n\t\t\tresult.data = result.data.map((a, i) => {\n\t\t\t\ta.unshift(i + 1); // header ids start from 1\n\t\t\t\ta.id = i + 1; //row ids\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\t\t//groupped data\n\t\telse {\n\t\t\tlet groupArr = [];\n\t\t\tfor (let i = 0; i < this.getRows().length - 1; i++) {\n\t\t\t\tgroupArr.push(groupOps);\n\t\t\t}\n\n\t\t\tresult = res.toNested({\n\t\t\t\tfilters,\n\t\t\t\tops,\n\t\t\t\tgroupOps: groupArr,\n\t\t\t\taggregateRows,\n\t\t\t\taggregateColumns,\n\t\t\t\tmarks,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t\tif (this._state.mode == \"tree\") {\n\t\t\t\theader = this.getHeader(res, result);\n\t\t\t\tresult.tree = result.tree.map(a => {\n\t\t\t\t\treturn this._toTree(a);\n\t\t\t\t});\n\t\t\t} else return this.getChartData(res, result, ops);\n\t\t}\n\n\t\treturn {\n\t\t\tdata: result.tree ? result.tree : result.data,\n\t\t\theader,\n\t\t\tmarks: result.marks,\n\t\t\ttotal: result.total,\n\t\t};\n\t}\n\t/**\n\t * Prepares data for tree nodes\n\t * @param {Object} obj - item data as returted by Pivot engine\n\t * @returns {Object} item data ready for parsing in Webix Tree\n\t */\n\t_toTree(obj) {\n\t\tconst item = obj.values;\n\t\titem.unshift(\"\"); //header ids start from 1\n\t\tif (obj.data) {\n\t\t\titem.open = true;\n\t\t\titem.data = obj.data.map(r => {\n\t\t\t\treturn this._toTree(r);\n\t\t\t});\n\t\t} else item.id = obj.id; //row ids\n\t\treturn item;\n\t}\n\t/**\n\t * Prepares a storage for raw data before aggregation\n\t * @param {Array} data - initial data set\n\t * @returns {Object} object with storage data and parameters\n\t */\n\tgetTable(data) {\n\t\tconst fields = this.getFields(data[0]);\n\n\t\tthis._state.fields = fields;\n\n\t\tthis._data = data = this.prepareData(data, fields);\n\n\t\tconst tname = \"webixpivot\" + webix.uid();\n\n\t\treturn {\n\t\t\tid: tname,\n\t\t\tprepare: true,\n\t\t\tdriver: \"raw\", //or \"columns\"\n\t\t\tfields: webix.copy(fields),\n\t\t\tdata,\n\t\t};\n\t}\n\t/**\n\t * Prepares data: parse dates, values template\n\t * @param {Array} data - initial data set\n\t * @returns {Array} data ready to parse\n\t */\n\tprepareData(data, fields) {\n\t\tfields = fields.filter(field => field.prepare || field.type == \"date\");\n\n\t\tif (fields.length) {\n\t\t\tdata = data.map(item => {\n\t\t\t\tfields.forEach(field => {\n\t\t\t\t\titem[field.id] = field.prepare\n\t\t\t\t\t\t? field.prepare(item[field.id])\n\t\t\t\t\t\t: new Date(item[field.id]);\n\t\t\t\t});\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\n\t\treturn data;\n\t}\n\t/**\n\t * Gets field values\n\t * @param {string} field name\n\t * @returns {Array} field values\n\t */\n\tcollectFieldValues(field) {\n\t\tif (this._filtersHash[field]) return this._filtersHash[field];\n\n\t\tconst fieldObj = this.getField(field);\n\n\t\tconst hash = {};\n\t\tconst values = [];\n\t\tfor (let i = 0; i < this._data.length; i++) {\n\t\t\tlet value = this._data[i][field];\n\t\t\tif (value || value === 0) {\n\t\t\t\tif (fieldObj.type == \"date\") value = value.valueOf();\n\n\t\t\t\tif (!hash[value]) {\n\t\t\t\t\thash[value] = true;\n\t\t\t\t\tvalues.push({ value, id: value });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._filtersHash[field] = values;\n\n\t\treturn values;\n\t}\n\t/**\n\t * Apply custom fields names and methods locale to complex math\n\t * @param {String} complex math\n\t * @returns {String} complex math with correct fields and math methods names\n\t */\n\tfixMath(math) {\n\t\tconst _ = this._app.getService(\"locale\")._;\n\n\t\tconst fields = this._state.fields;\n\t\tconst fieldsRegex = new RegExp(\n\t\t\tfields.map(field => \"\\\\b\" + field.id + \"\\\\b(?!\\\\()\").join(\"|\"),\n\t\t\t\"g\"\n\t\t);\n\n\t\tconst methods = this.operations;\n\t\tconst methodsRegex = new RegExp(\n\t\t\tmethods.map(method => \"\\\\b\" + method.id + \"\\\\b\\\\(\").join(\"|\"),\n\t\t\t\"g\"\n\t\t);\n\n\t\treturn math\n\t\t\t.replaceAll(fieldsRegex, id => fields.find(obj => obj.id == id).value)\n\t\t\t.replaceAll(\n\t\t\t\tmethodsRegex,\n\t\t\t\tmethod => _(method.substring(0, method.length - 1)) + \"(\"\n\t\t\t);\n\t}\n\t/**\n\t * Finds field\n\t * @param {String} field id\n\t * @returns {Object} field\n\t */\n\tgetField(id) {\n\t\treturn this._state.fields.find(obj => obj.id == id);\n\t}\n\t/**\n\t * Returns columns for aggregation\n\t * @returns {Array} array of field names for columns\n\t */\n\tgetColumns() {\n\t\tconst struct = this._state.structure;\n\t\tif (this._state.mode == \"chart\" && struct.groupBy) return [struct.groupBy];\n\t\telse return struct.columns;\n\t}\n\t/**\n\t * Returns for aggregation\n\t * @returns {Array} array of field names for rows\n\t */\n\tgetRows() {\n\t\treturn this._state.mode != \"chart\" ? this._state.structure.rows : [];\n\t}\n\t/** Sets limits for raw and output data\n\t * @returns {Object} object with limits. By default math engine uses\n\t * { rows: 10000, columns: 5000, raws: Infinity }\n\t */\n\tgetLimits() {\n\t\treturn {};\n\t}\n\t/**\n\t * Prepares table header\n\t * @param {Object} res - object with groupped data\n\t * @param {Object} result - object with aggregated data and its parameters\n\t * @returns {Array} array with header lines\n\t */\n\tgetHeader(res, result) {\n\t\tconst hdata = res.toXHeader(result, { meta: true, nonEmpty: true });\n\t\tconst header = hdata.data;\n\n\t\tconst rows = [];\n\t\thdata.nonEmpty.forEach(i => {\n\t\t\trows.push({\n\t\t\t\tid: i + 1,\n\t\t\t\theader: header.map(h => {\n\t\t\t\t\th = h[i] && h[i].text ? h[i] : { text: h[i] || \"\" };\n\t\t\t\t\tconst op = hdata.meta[i] && hdata.meta[i].operation;\n\t\t\t\t\tif (op) h.operation = op;\n\t\t\t\t\treturn h;\n\t\t\t\t}),\n\t\t\t\tformat: hdata.meta[i] && hdata.meta[i].format,\n\t\t\t});\n\t\t});\n\n\t\treturn rows;\n\t}\n\t/**\n\t * Sets dimensions based on rows/columns from structure\n\t */\n\tsetDimensions() {\n\t\tthis._reng.resetDimensions();\n\t\tconst columns = this.getColumns();\n\t\tconst fields = columns.concat(this.getRows() || []);\n\n\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\tconst field = this.getField(fields[i]);\n\t\t\tthis._reng.addDimension({\n\t\t\t\tid: fields[i],\n\t\t\t\ttable: this._table.id,\n\t\t\t\tlabel: fields[i],\n\t\t\t\trule: {\n\t\t\t\t\tby: field.predicate ? `${field.predicate}(${fields[i]})` : fields[i],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\t/**\n\t * Prepares chart data\n\t * @param {Object} res - object with groupped data\n\t * @param {Object} result - object with aggregated data and its parameters\n\t * @returns {Array} array with chart data\n\t */\n\tgetChartData(res, result, ops) {\n\t\tconst data = [];\n\t\tconst values = [];\n\t\tconst axis = res.toXHeader(result).data[0];\n\n\t\tif (result.data.length) {\n\t\t\tconst first = webix.copy(result.data[0]);\n\t\t\tlet count = 0;\n\t\t\twhile (first.length) {\n\t\t\t\tconst item = first.splice(0, ops.length);\n\t\t\t\tif (item.length) {\n\t\t\t\t\titem.push(axis[count].text || axis[count]);\n\t\t\t\t\tdata.push(item);\n\t\t\t\t\tcount += ops.length;\n\t\t\t\t} else break;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < ops.length; i++) {\n\t\t\tvalues.push({\n\t\t\t\ttext: ops[i].label || ops[i].meta.operation,\n\t\t\t\toperation: ops[i].meta.operation,\n\t\t\t\tcolor: ops[i].meta.color,\n\t\t\t});\n\t\t}\n\n\t\treturn { data, values };\n\t}\n\t/**\n\t * Gets built-in colors for chart values\n\t * @returns {Array} color palette\n\t */\n\tgetPalette() {\n\t\treturn [\n\t\t\t[\"#e33fc7\", \"#a244ea\", \"#476cee\", \"#36abee\", \"#58dccd\", \"#a7ee70\"],\n\t\t\t[\"#d3ee36\", \"#eed236\", \"#ee9336\", \"#ee4339\", \"#595959\", \"#b85981\"],\n\t\t\t[\"#c670b8\", \"#9984ce\", \"#b9b9e2\", \"#b0cdfa\", \"#a0e4eb\", \"#7faf1b\"],\n\t\t\t[\"#b4d9a4\", \"#f2f79a\", \"#ffaa7d\", \"#d6806f\", \"#939393\", \"#d9b0d1\"],\n\t\t\t[\"#780e3b\", \"#684da9\", \"#242464\", \"#205793\", \"#5199a4\", \"#065c27\"],\n\t\t\t[\"#54b15a\", \"#ecf125\", \"#c65000\", \"#990001\", \"#363636\", \"#800f3e\"],\n\t\t];\n\t}\n\t/**\n\t * Gets a color from the palette\n\t * @param {number} i - row number of the required value\n\t * @returns {string} HEX color\n\t */\n\tgetValueColor(i) {\n\t\tconst palette = this.getPalette();\n\t\tlet rowIndex = i / palette[0].length;\n\t\trowIndex = rowIndex > palette.length ? 0 : parseInt(rowIndex, 10);\n\t\tconst columnIndex = i % palette[0].length;\n\t\treturn palette[rowIndex][columnIndex];\n\t}\n}\n","export default class Backend {\n\t/**\n\t * @constructor\n\t * @param {App} app - Jet App instance\n\t * @param {string} url - the URL to load/save data\n\t */\n\tconstructor(app, url) {\n\t\tthis.app = app;\n\t\tthis._url = url;\n\t}\n\t/**\n\t * Prepares url\n\t * @param {string} path - end of url\n\t * @returns {string} ready url\n\t */\n\turl(path) {\n\t\treturn this._url + (path || \"\");\n\t}\n\t/**\n\t * Gets data from backend\n\t * @returns {Promise} response from server\n\t */\n\tdata() {\n\t\treturn webix.ajax(this.url()).then(res => res.json());\n\t}\n}\n","import { JetApp, plugins, EmptyRouter } from \"webix-jet\";\nimport { createState, link } from \"jet-restate\";\n\nimport views from \"./export_views\";\nimport en from \"locales/en\";\n\nimport LocalData from \"models/LocalData\";\nimport Backend from \"./models/Backend\";\n\nexport class App extends JetApp {\n\tconstructor(config) {\n\t\tconst mode = config.mode || \"tree\";\n\t\tlet structure = config.structure || {};\n\n\t\tconst chart = config.chart || {};\n\t\twebix.extend(chart, { type: \"bar\", scale: \"linear\", lines: true });\n\t\tdelete chart.id;\n\n\t\tconst datatable = config.datatable || {};\n\t\tdelete datatable.id;\n\n\t\tconst state = createState({\n\t\t\tmode,\n\t\t\tstructure,\n\t\t\treadonly: config.readonly || false,\n\t\t\tfields: config.fields || [],\n\t\t\tdatatable,\n\t\t\tchart,\n\t\t\tconfig: false,\n\t\t});\n\n\t\tconst defaults = {\n\t\t\trouter: EmptyRouter,\n\t\t\tversion: VERSION,\n\t\t\tdebug: DEBUG,\n\t\t\tcompactWidth: 720,\n\t\t\tstart: \"main/\" + (mode == \"chart\" ? \"chart\" : \"table\"),\n\t\t\tparams: { state, forceCompact: config.compact },\n\t\t};\n\n\t\tsuper({ ...defaults, ...config });\n\n\t\t// order matters!\n\t\tthis.setService(\n\t\t\t\"backend\",\n\t\t\tnew (this.dynamic(Backend))(this, this.config.url)\n\t\t);\n\t\tthis.setService(\"local\", new (this.dynamic(LocalData))(this, config));\n\n\t\tstructure = this.prepareStructure(structure, true);\n\n\t\tthis.use(\n\t\t\tplugins.Locale,\n\t\t\tthis.config.locale || {\n\t\t\t\tlang: \"en\",\n\t\t\t\twebix: {\n\t\t\t\t\ten: \"en-US\",\n\t\t\t\t},\n\t\t\t}\n\t\t);\n\t}\n\n\tdynamic(obj) {\n\t\treturn this.config.override ? this.config.override.get(obj) || obj : obj;\n\t}\n\n\trequire(type, name) {\n\t\tif (type === \"jet-views\") return views[name];\n\t\telse if (type === \"jet-locales\") return locales[name];\n\n\t\treturn null;\n\t}\n\n\tgetState() {\n\t\treturn this.config.params.state;\n\t}\n\n\tsetStructure(structure) {\n\t\tthis.getState().structure = this.prepareStructure(structure);\n\t}\n\n\tgetStructure() {\n\t\treturn this.getState().structure;\n\t}\n\n\tprepareStructure(structure, initial) {\n\t\tconst mode = this.getState().mode;\n\n\t\twebix.extend(structure, {\n\t\t\trows: [],\n\t\t\tcolumns: [],\n\t\t\tvalues: [],\n\t\t\tfilters: [],\n\t\t});\n\n\t\t/* sync columns and groupBy depending on current mode*/\n\t\tif (initial) {\n\t\t\tif ((mode != \"chart\" || !structure.groupBy) && structure.columns.length)\n\t\t\t\tstructure.groupBy = structure.columns[0];\n\t\t\telse if (structure.groupBy) structure.columns = [structure.groupBy];\n\t\t} else {\n\t\t\tif (mode != \"chart\") structure.groupBy = structure.columns[0];\n\t\t\telse {\n\t\t\t\tif (!structure.groupBy) structure.columns = [];\n\t\t\t\telse if (structure.columns[0] !== structure.groupBy)\n\t\t\t\t\tstructure.columns = [structure.groupBy];\n\t\t\t}\n\t\t}\n\n\t\tconst values = [];\n\n\t\t/* backward compatibility: \n\t\t\tturn values like {name:\"balance\", operation:[\"min\",\"max\"]}\n\t\t\tinto {name:\"balance\", operation:\"min\"}, {name:\"balance\", operation:\"max\"}\n\t\t*/\n\t\tfor (let i = 0; i < structure.values.length; i++) {\n\t\t\tconst value = structure.values[i];\n\t\t\tif (webix.isArray(value.operation)) {\n\t\t\t\tvalue.color =\n\t\t\t\t\t(webix.isArray(value.color) ? value.color : [value.color]) || [];\n\t\t\t\tfor (let i = 0; i < value.operation.length; i++) {\n\t\t\t\t\tconst obj = { ...value };\n\t\t\t\t\tobj.operation = value.operation[i];\n\t\t\t\t\tobj.color = value.color && value.color[i];\n\n\t\t\t\t\tvalues.push(obj);\n\t\t\t\t}\n\t\t\t} else values.push(value);\n\t\t}\n\t\t/*assign colors for values if missing*/\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tif (!values[i].color)\n\t\t\t\tvalues[i].color = this.getService(\"local\").getValueColor(i);\n\t\t}\n\t\tstructure.values = values;\n\n\t\treturn structure;\n\t}\n}\n\nwebix.protoUI(\n\t{\n\t\tname: \"pivot\",\n\t\tapp: App,\n\t\tdefaults: {\n\t\t\tborderless: false,\n\t\t},\n\t\t$init: function() {\n\t\t\tthis.name = \"pivot\";\n\n\t\t\tconst state = this.$app.getState();\n\t\t\tfor (let key in state) {\n\t\t\t\tlink(state, this.config, key);\n\t\t\t}\n\n\t\t\tthis.$app.attachEvent(\"filter:change\", (field, value) =>\n\t\t\t\tthis.callEvent(\"onFilterChange\", [field, value])\n\t\t\t);\n\t\t},\n\t\t$exportView: function(options) {\n\t\t\tconst exportView = this.$app.getRoot().queryView({ $mainView: true });\n\n\t\t\treturn exportView.$exportView\n\t\t\t\t? exportView.$exportView(options)\n\t\t\t\t: exportView;\n\t\t},\n\t\tgetState() {\n\t\t\treturn this.$app.getState();\n\t\t},\n\t\tgetService(name) {\n\t\t\treturn this.$app.getService(name);\n\t\t},\n\t\tsetStructure: function(structure) {\n\t\t\tthis.$app.setStructure(structure);\n\t\t},\n\t\tgetStructure: function() {\n\t\t\treturn this.$app.getStructure();\n\t\t},\n\t},\n\twebix.ui.jetapp\n);\n\n// re-export for customization\nconst services = { Backend, LocalData };\nconst locales = { en };\nexport { views, services, locales };\n","export default {\n\t//general\n\tDone: \"Done\",\n\tTable: \"Table\",\n\tTree: \"Tree\",\n\tChart: \"Chart\",\n\t\"Click to configure\": \"Click to configure\",\n\t\"Configure Pivot\": \"Configure Pivot\",\n\tTotal: \"Total\",\n\t//settings\n\tColumns: \"Columns\",\n\t\"Add column\": \"Add column\",\n\tRows: \"Rows\",\n\t\"Add row\": \"Add row\",\n\t\"Clean rows\": \"Clean rows\",\n\tFilters: \"Filters\",\n\t\"Add filter\": \"Add filter\",\n\t\"Group By\": \"Group By\",\n\t\"Chart type\": \"Chart type\",\n\t\"Logarithmic scale\": \"Logarithmic scale\",\n\t\"X axis title\": \"X axis title\",\n\t\"Y axis title\": \"Y axis title\",\n\t\"Scale color\": \"Scale color\",\n\t\"Circled lines\": \"Circled lines\",\n\tLines: \"Lines\",\n\tLine: \"Line\",\n\tRadar: \"Radar\",\n\tBar: \"Bar\",\n\tArea: \"Area\",\n\tSpline: \"Spline\",\n\t\"Spline Area\": \"Spline Area\",\n\tValues: \"Values\",\n\t\"Add value\": \"Add value\",\n\t\"Field not defined\": \"Field not defined\",\n\tHighlight: \"Highlight\",\n\t\"Min X\": \"Min X\",\n\t\"Max X\": \"Max X\",\n\t\"Min Y\": \"Min Y\",\n\t\"Max Y\": \"Max Y\",\n\tFooter: \"Footer\",\n\tOff: \"Off\",\n\tOn: \"On\",\n\t\"Sum Only\": \"Sum Only\",\n\t//operations\n\tcount: \"count\",\n\tmax: \"max\",\n\tmin: \"min\",\n\tavg: \"avg\",\n\twavg: \"wavg\",\n\tany: \"any\",\n\tsum: \"sum\",\n};\n"],"names":["webix","config","this","webixJet","_events","_subs","_data","params","extend","JetBase","_root","_detachEvents","_destroySubs","_container","app","_parent","id","value","url","_segment","update","show","parent","view","getParentView","getParam","suburl","toString","root_1","getRoot","queryView","obj","localId","$scope","name","code","attachEvent","push","key","kid","contains","sub","getSubViewInfo","subview","popup","events","i","length","detachEvent","subView","destructor","current","default","branch","child","_getDefaultSub","_routed_view","parse","substr","parts","split","chunks","test","result","pos","indexOf","params_1","_i","dchunk","decodeURIComponent","page","isNew","url2str","stack","stack_1","chunk","obj2str","join","str","encodeURIComponent","route","index","_next","path","Route","slice","setParams","old","kids","reset","concat","_join","Promise","res","rej","redirect","confirm","resolve","callEvent","NavigationBlocked","catch","err","then","_this","n","_super","_children","__extends","JetView","ui","container","jetview","createView","render","setParam","parent_1","target","_renderFrameLock","_show","segment","_init_url_data","_urlChange","linkRouter","getRouter","set","silent","_$view","_$","_$url","message","destroy","_destroyKids","plugin","getUrl","tagName","refresh","_render","root","document","body","toNode","cfg","_render_final","response","slot","$$","reject","copyConfig","oldui","parent_2","asWin","setPosition","isVisible","_init","_initUrl","ready","e","_initError","init","waits","frame","wait","all","urlChange","lock","_renderFrame","next","_createSubView","shift","_override","error","createFromURL","uis","_ui","JetViewRaw","cb","SubRouter","a","append","_once","window","version","start","_services","EventSystem","JetAppBase","_subSegment","handler","getSubView","prototype","$subview","addSubView","isArray","Array","method","point","DataCollection","RegExp","Map","Date","copy","$router","srcElement","getAttribute","trigger_1","_forView","trigger","cancelBubble","preventDefault","route_1","parentNode","clickHandler","views","_loadError","Error","hidden","replace","require","module","__esModule","loadView","over","override","dv","get","router","rest","apply","data","bind","er","debug","console","text","innerHTML","type","expire","event","_first_start","top","base","setTimeout","animation","node_1","html","addCss","removeCss","now","urlString","template","uid","_detectPrefix","onpopstate","HashRouter","routes","compare","history","pushState","prefix","sufix","_getRaw","routerPrefix","location","href","isPatched","patch","w","win","promise","freeze","some","$freeze","resize","baseAdd","baselayout","addView","baseRemove","removeView","jview_1","subs_1","arguments","subs","layout","protoUI","$init","$app","$ready","proxy","JetApp","UrlRouter","pathname","search","_$config","EmptyRouter","has","store","Object","hasOwnProperty","call","forEach","context","warn","x","String","russianPluralGroups","end","pluralTypes","arabic","lastTwo","bosnian_serbian","chinese","croatian","french","german","russian","lithuanian","czech","polish","icelandic","slovenian","pluralTypeToLanguages","pluralTypeName","locale","ret","langToPluralType","langs","lang","en","escape","token","dollarRegex","defaultTokenRegex","transformPhrase","phrase","substitutions","tokenRegex","TypeError","interpolationRegex","options","smart_count","texts","count","pluralTypeIndex","expression","argument","Polyglot","opts","phrases","currentLocale","allowMissing","onMissingKey","suffix","RangeError","constructTokenRegex","interpolation","newLocale","morePhrases","prefixedKey","unset","clear","newPhrases","t","_","webixPolyglot","plugins","_view","storage","setLangData","pconfig","polyglot","poly","service","put","locName","i18n","setLocale","setLang","getLang","setService","link","source","defineProperty","createState","handlers","out","observe","mask","undefined","queue","waitInQueue","notify","meta","list","keys","enumerable","configurable","values_1","sconfig","nested","reactive","$extend","val","valueOf","ChartView","state","State","chart","$mainView","borderless","xAxis","yAxis","commonAxisSettings","lines","scaleColor","color","lineColor","Local","getService","LoadData","on","$changes","structure","UpdateStructure","o","getData","UpdateChart","getPivotData","clearAll","removeAllSeries","SetSeries","values","this_1","addSeries","alpha","tooltip","item","borderColor","line","operation","map","getField","fixMath","SetLegend","legend","valign","align","define","$reorderOnly","$drag","object","$view","ctx","DragControl","getContext","from","local","getChildViews","getValues","name2","isUndefined","askin","skin","$active","$width","inputHeight","$height","icon","portlet","plusLabel","field","Property","paddingY","rows","css","height","inputPadding","onClick","webix_pivot_handle_add_value","forms","added","Add","input","focus","triggerEvent","getInputNode","getState","fields","hide","GetValue","active","_activeInput","wavg","$destructed","getFormView","elements","getValue","corrections","GetCorrections","CheckCorrections","getStructure","j","arr","form","external","mode","paddingX","margin","cols","ItemConfig","onChange","width","PrepareValue","onBeforeShow","master","getList","filter","FilterSuggest","ListTemplate","click","activeVal","find","typeName","operations","ValuesProperty","ToggleColors","splice","label","def_1","defaultOperation","defIndex","Math","max","findIndex","v","SetOperation","mini","$name","palette","getPalette","getValueColor","suggest","GroupProperty","padding","oldValue","setValue","ChartSettings","complexData","batch","editable","checkValue","uncheckValue","labelWidth","labelRight","innerChange","assign","handleVisibility","setValues","showBatch","TableSettings","OutValues","datatable","InValues","footer","ConfigView","Config","Compact","left","right","bottom","hotkey","autowidth","ToggleForm","scroll","multi","GroupConfig","_v","HandleFieldChange","SetValues","oldMode","isChart","SetValue","CorrectFilters","CorrectInputs","setStructure","header","columns","groupBy","filters","inputs","Popup","fullscreen","head","FilterView","value_1","exists","inner","filterObj","getBody","collectFieldValues","predicate","predicates","ModeView","toolbarHeight","optionWidth","c","SetMode","dataPadding","unshift","ToolbarView","buttonHeight","onItemClick","ToggleConfig","label_1","getTextSize","webix_pivot_settings","GetFilters","filterPopup","FiltersChanged","ToggleReadonly","oldStructure","JSON","stringify","FilterConfig","activeCss","includes","condition","webix_pivot_filter","Show","sizeTrigger","_compactValue","_compactWidth","_compactHandler","_checkTrigger","$setSize","y","MainView","fCompact","main","compactWidth","SetCompactMode","ShowConfig","HideConfig","delay","exit","TableView","table","select","leftSplit","resizeColumn","UpdateTable","refreshColumns","SetColumns","total","marks","totals","sort","format","CellFormat","cssFormat","row","rid","cid","col","h","HeaderTemplate","SetFirstColumn","column","common","treetable","parseFloat","toFixed","m0","m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","asc","b","desc","_sort","_label","_meta","_table","_getter","_prepared","DataDimension","_indexes","_values","_prepareOptions","_keys","fSize","indexes","pivot","_pivot","DataExport","_a","cleanRows","ops","aggregateRows","aggregateColumns","maxRow","getLimit","resetCursor","_b","getWidth","scaleWidth","_cleanRows","allRows","allColumns","mark","groupOps","getXHeader","rowsLength","prev","j_1","Function","propertyName","methodName","contextName","r","s","u","o_1","f","i_1","property","optimize","order","allMath","math","rule","cache","getColumn","getter","toLowerCase","getMath","to","array","size","temp","optimizeGroup","and","buildFinder","check_1","check","step","build","_rows","_cols","_dims","_context","_cursor","_order","_base_order","getIndexes","DataPivot","_group","_nextRow","_nextColumn","_ops","dimsSize","_fillRow","dimSize","dimOutSize","levels","starts","limit","min","_sizes","getSize","level","last","_fillGroupRowInner","__spreadArrays","_groupOps","tree","hConfig","_opInfo","nonEmpty","isNested","rpref","ostep","unitsInParent","reduce","fullLength","unitSizes","outer","i_2","colspan","ind","floor","opNames","z","rowspan","getLabel","metaLine","getMeta","rules","_masterRules","p","_setSizes","_fillTotal","_filAggrRows","_filAggrCols","len","maths","needNext","mline","op","t_1","t_2","rl","cfrom","cind","cto","raws","dimsData","ok","sizes","sum","_columns","RawTable","_raw","_parse_inner","dataLength","columnsLength","setter","ColumnTable","_parse_init","methods","round","acc","avg","summ","any","eq","neq","gt","gte","lt","lte","in","hasPrefix","year","getFullYear","month","getMonth","day","getDay","hour","getHours","minute","getMinutes","_tables","_dimensions","_preds","_maths","_comps","tables","addTable","dimensions","addDimension","Analytic","_predicateGetter","by","preserve","used","driver","prepare","rDims","cDims","Infinity","fn_1","getter_1","_app","_store","_filtersHash","_state","_initRengine","LocalData","extraOperations","name_1","_reng","addMath","addComparator","name_2","addPredicate","firstRow","dataType","force","getTable","rengine.Analytic","_setFilters","_setOperations","_setPredicates","setDimensions","this_2","compact","getRows","getColumns","getLimits","vals","name_3","minY","webix_min_y","maxY","webix_max_y","minX","webix_min_x","maxX","webix_max_x","toArray","getHeader","groupArr","toNested","getChartData","_toTree","open","getFields","prepareData","fieldObj","hash","fieldsRegex","methodsRegex","replaceAll","substring","struct","hdata","toXHeader","resetDimensions","axis","first","rowIndex","parseInt","columnIndex","_url","Backend","ajax","json","scale","readonly","defaults","forceCompact","dynamic","prepareStructure","use","App","locales","initial","$exportView","exportView","jetapp","services","Done","Table","Tree","Chart","Click to configure","Configure Pivot","Total","Columns","Add column","Rows","Add row","Clean rows","Filters","Add filter","Group By","Chart type","Logarithmic scale","X axis title","Y axis title","Scale color","Circled lines","Lines","Line","Radar","Bar","Area","Spline","Spline Area","Values","Add value","Field not defined","Highlight","Min X","Max X","Min Y","Max Y","Footer","Off","On","Sum Only"],"mappings":"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"}